// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.4
// source: relation.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------createRepo--------------------------------
type CreateRepo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId       uint64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`             //dataId
	DataCreateAt int64  `protobuf:"varint,2,opt,name=dataCreateAt,proto3" json:"dataCreateAt,omitempty"` //dataCreateAt
	DataUpdateAt int64  `protobuf:"varint,3,opt,name=dataUpdateAt,proto3" json:"dataUpdateAt,omitempty"` //dataUpdateAt
	DeveloperId  uint64 `protobuf:"varint,4,opt,name=developerId,proto3" json:"developerId,omitempty"`   //developerId
	RepoId       uint64 `protobuf:"varint,5,opt,name=repoId,proto3" json:"repoId,omitempty"`             //repoId
}

func (x *CreateRepo) Reset() {
	*x = CreateRepo{}
	mi := &file_relation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRepo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepo) ProtoMessage() {}

func (x *CreateRepo) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepo.ProtoReflect.Descriptor instead.
func (*CreateRepo) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRepo) GetDataId() uint64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *CreateRepo) GetDataCreateAt() int64 {
	if x != nil {
		return x.DataCreateAt
	}
	return 0
}

func (x *CreateRepo) GetDataUpdateAt() int64 {
	if x != nil {
		return x.DataUpdateAt
	}
	return 0
}

func (x *CreateRepo) GetDeveloperId() uint64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *CreateRepo) GetRepoId() uint64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type AddCreateRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId uint64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
	RepoId      uint64 `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`           //repoId
}

func (x *AddCreateRepoReq) Reset() {
	*x = AddCreateRepoReq{}
	mi := &file_relation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCreateRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCreateRepoReq) ProtoMessage() {}

func (x *AddCreateRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCreateRepoReq.ProtoReflect.Descriptor instead.
func (*AddCreateRepoReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{1}
}

func (x *AddCreateRepoReq) GetDeveloperId() uint64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *AddCreateRepoReq) GetRepoId() uint64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type AddCreateRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddCreateRepoResp) Reset() {
	*x = AddCreateRepoResp{}
	mi := &file_relation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCreateRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCreateRepoResp) ProtoMessage() {}

func (x *AddCreateRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCreateRepoResp.ProtoReflect.Descriptor instead.
func (*AddCreateRepoResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{2}
}

type DelCreateRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoId uint64 `protobuf:"varint,1,opt,name=repoId,proto3" json:"repoId,omitempty"` //repoId
}

func (x *DelCreateRepoReq) Reset() {
	*x = DelCreateRepoReq{}
	mi := &file_relation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelCreateRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCreateRepoReq) ProtoMessage() {}

func (x *DelCreateRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCreateRepoReq.ProtoReflect.Descriptor instead.
func (*DelCreateRepoReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{3}
}

func (x *DelCreateRepoReq) GetRepoId() uint64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type DelCreateRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelCreateRepoResp) Reset() {
	*x = DelCreateRepoResp{}
	mi := &file_relation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelCreateRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCreateRepoResp) ProtoMessage() {}

func (x *DelCreateRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCreateRepoResp.ProtoReflect.Descriptor instead.
func (*DelCreateRepoResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{4}
}

type GetCreatorIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoId uint64 `protobuf:"varint,1,opt,name=repoId,proto3" json:"repoId,omitempty"` //repoId
}

func (x *GetCreatorIdReq) Reset() {
	*x = GetCreatorIdReq{}
	mi := &file_relation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCreatorIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatorIdReq) ProtoMessage() {}

func (x *GetCreatorIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatorIdReq.ProtoReflect.Descriptor instead.
func (*GetCreatorIdReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{5}
}

func (x *GetCreatorIdReq) GetRepoId() uint64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type GetCreatorIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId uint64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *GetCreatorIdResp) Reset() {
	*x = GetCreatorIdResp{}
	mi := &file_relation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCreatorIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatorIdResp) ProtoMessage() {}

func (x *GetCreatorIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatorIdResp.ProtoReflect.Descriptor instead.
func (*GetCreatorIdResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{6}
}

func (x *GetCreatorIdResp) GetDeveloperId() uint64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type SearchCreatedRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`               //page
	Limit       int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`             //limit
	DeveloperId uint64 `protobuf:"varint,3,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *SearchCreatedRepoReq) Reset() {
	*x = SearchCreatedRepoReq{}
	mi := &file_relation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCreatedRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCreatedRepoReq) ProtoMessage() {}

func (x *SearchCreatedRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCreatedRepoReq.ProtoReflect.Descriptor instead.
func (*SearchCreatedRepoReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{7}
}

func (x *SearchCreatedRepoReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchCreatedRepoReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchCreatedRepoReq) GetDeveloperId() uint64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type SearchCreatedRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoIds []uint64 `protobuf:"varint,1,rep,packed,name=repoIds,proto3" json:"repoIds,omitempty"` //repoId
}

func (x *SearchCreatedRepoResp) Reset() {
	*x = SearchCreatedRepoResp{}
	mi := &file_relation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCreatedRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCreatedRepoResp) ProtoMessage() {}

func (x *SearchCreatedRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCreatedRepoResp.ProtoReflect.Descriptor instead.
func (*SearchCreatedRepoResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{8}
}

func (x *SearchCreatedRepoResp) GetRepoIds() []uint64 {
	if x != nil {
		return x.RepoIds
	}
	return nil
}

// --------------------------------follow--------------------------------
type Follow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId       uint64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`             //dataId
	DataCreateAt int64  `protobuf:"varint,2,opt,name=dataCreateAt,proto3" json:"dataCreateAt,omitempty"` //dataCreateAt
	DataUpdateAt int64  `protobuf:"varint,3,opt,name=dataUpdateAt,proto3" json:"dataUpdateAt,omitempty"` //dataUpdateAt
	FollowingId  uint64 `protobuf:"varint,4,opt,name=followingId,proto3" json:"followingId,omitempty"`   //followingId
	FollowedId   uint64 `protobuf:"varint,5,opt,name=followedId,proto3" json:"followedId,omitempty"`     //followedId
}

func (x *Follow) Reset() {
	*x = Follow{}
	mi := &file_relation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Follow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Follow) ProtoMessage() {}

func (x *Follow) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Follow.ProtoReflect.Descriptor instead.
func (*Follow) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{9}
}

func (x *Follow) GetDataId() uint64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Follow) GetDataCreateAt() int64 {
	if x != nil {
		return x.DataCreateAt
	}
	return 0
}

func (x *Follow) GetDataUpdateAt() int64 {
	if x != nil {
		return x.DataUpdateAt
	}
	return 0
}

func (x *Follow) GetFollowingId() uint64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

func (x *Follow) GetFollowedId() uint64 {
	if x != nil {
		return x.FollowedId
	}
	return 0
}

type AddFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowingId uint64 `protobuf:"varint,1,opt,name=followingId,proto3" json:"followingId,omitempty"` //followingId
	FollowedId  uint64 `protobuf:"varint,2,opt,name=followedId,proto3" json:"followedId,omitempty"`   //followedId
}

func (x *AddFollowReq) Reset() {
	*x = AddFollowReq{}
	mi := &file_relation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFollowReq) ProtoMessage() {}

func (x *AddFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFollowReq.ProtoReflect.Descriptor instead.
func (*AddFollowReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{10}
}

func (x *AddFollowReq) GetFollowingId() uint64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

func (x *AddFollowReq) GetFollowedId() uint64 {
	if x != nil {
		return x.FollowedId
	}
	return 0
}

type AddFollowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddFollowResp) Reset() {
	*x = AddFollowResp{}
	mi := &file_relation_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFollowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFollowResp) ProtoMessage() {}

func (x *AddFollowResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFollowResp.ProtoReflect.Descriptor instead.
func (*AddFollowResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{11}
}

type DelFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowingId uint64 `protobuf:"varint,1,opt,name=followingId,proto3" json:"followingId,omitempty"` //followingId
	FollowedId  uint64 `protobuf:"varint,2,opt,name=followedId,proto3" json:"followedId,omitempty"`   //followedId
}

func (x *DelFollowReq) Reset() {
	*x = DelFollowReq{}
	mi := &file_relation_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFollowReq) ProtoMessage() {}

func (x *DelFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFollowReq.ProtoReflect.Descriptor instead.
func (*DelFollowReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{12}
}

func (x *DelFollowReq) GetFollowingId() uint64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

func (x *DelFollowReq) GetFollowedId() uint64 {
	if x != nil {
		return x.FollowedId
	}
	return 0
}

type DelFollowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelFollowResp) Reset() {
	*x = DelFollowResp{}
	mi := &file_relation_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelFollowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFollowResp) ProtoMessage() {}

func (x *DelFollowResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFollowResp.ProtoReflect.Descriptor instead.
func (*DelFollowResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{13}
}

type CheckIfFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowingId uint64 `protobuf:"varint,1,opt,name=followingId,proto3" json:"followingId,omitempty"` //followingId
	FollowedId  uint64 `protobuf:"varint,2,opt,name=followedId,proto3" json:"followedId,omitempty"`   //followedId
}

func (x *CheckIfFollowReq) Reset() {
	*x = CheckIfFollowReq{}
	mi := &file_relation_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckIfFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfFollowReq) ProtoMessage() {}

func (x *CheckIfFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfFollowReq.ProtoReflect.Descriptor instead.
func (*CheckIfFollowReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{14}
}

func (x *CheckIfFollowReq) GetFollowingId() uint64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

func (x *CheckIfFollowReq) GetFollowedId() uint64 {
	if x != nil {
		return x.FollowedId
	}
	return 0
}

type CheckFollowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFollow bool `protobuf:"varint,1,opt,name=isFollow,proto3" json:"isFollow,omitempty"` //isFollow
}

func (x *CheckFollowResp) Reset() {
	*x = CheckFollowResp{}
	mi := &file_relation_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckFollowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFollowResp) ProtoMessage() {}

func (x *CheckFollowResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFollowResp.ProtoReflect.Descriptor instead.
func (*CheckFollowResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{15}
}

func (x *CheckFollowResp) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

type SearchFollowedByFollowingIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`               //page
	Limit       int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`             //limit
	FollowingId uint64 `protobuf:"varint,3,opt,name=followingId,proto3" json:"followingId,omitempty"` //followingId
}

func (x *SearchFollowedByFollowingIdReq) Reset() {
	*x = SearchFollowedByFollowingIdReq{}
	mi := &file_relation_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFollowedByFollowingIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFollowedByFollowingIdReq) ProtoMessage() {}

func (x *SearchFollowedByFollowingIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFollowedByFollowingIdReq.ProtoReflect.Descriptor instead.
func (*SearchFollowedByFollowingIdReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{16}
}

func (x *SearchFollowedByFollowingIdReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchFollowedByFollowingIdReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchFollowedByFollowingIdReq) GetFollowingId() uint64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

type SearchFollowByFollowingIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowedIds []uint64 `protobuf:"varint,1,rep,packed,name=followedIds,proto3" json:"followedIds,omitempty"` //followedId
}

func (x *SearchFollowByFollowingIdResp) Reset() {
	*x = SearchFollowByFollowingIdResp{}
	mi := &file_relation_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFollowByFollowingIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFollowByFollowingIdResp) ProtoMessage() {}

func (x *SearchFollowByFollowingIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFollowByFollowingIdResp.ProtoReflect.Descriptor instead.
func (*SearchFollowByFollowingIdResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{17}
}

func (x *SearchFollowByFollowingIdResp) GetFollowedIds() []uint64 {
	if x != nil {
		return x.FollowedIds
	}
	return nil
}

type SearchFollowingByFollowedIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`             //page
	Limit      int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`           //limit
	FollowedId uint64 `protobuf:"varint,3,opt,name=followedId,proto3" json:"followedId,omitempty"` //followedId
}

func (x *SearchFollowingByFollowedIdReq) Reset() {
	*x = SearchFollowingByFollowedIdReq{}
	mi := &file_relation_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFollowingByFollowedIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFollowingByFollowedIdReq) ProtoMessage() {}

func (x *SearchFollowingByFollowedIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFollowingByFollowedIdReq.ProtoReflect.Descriptor instead.
func (*SearchFollowingByFollowedIdReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{18}
}

func (x *SearchFollowingByFollowedIdReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchFollowingByFollowedIdReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchFollowingByFollowedIdReq) GetFollowedId() uint64 {
	if x != nil {
		return x.FollowedId
	}
	return 0
}

type SearchFollowByFollowedIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowingIds []uint64 `protobuf:"varint,1,rep,packed,name=followingIds,proto3" json:"followingIds,omitempty"` //followingId
}

func (x *SearchFollowByFollowedIdResp) Reset() {
	*x = SearchFollowByFollowedIdResp{}
	mi := &file_relation_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFollowByFollowedIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFollowByFollowedIdResp) ProtoMessage() {}

func (x *SearchFollowByFollowedIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFollowByFollowedIdResp.ProtoReflect.Descriptor instead.
func (*SearchFollowByFollowedIdResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{19}
}

func (x *SearchFollowByFollowedIdResp) GetFollowingIds() []uint64 {
	if x != nil {
		return x.FollowingIds
	}
	return nil
}

// --------------------------------fork--------------------------------
type Fork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId         uint64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`                 //dataId
	DataCreateAt   int64  `protobuf:"varint,2,opt,name=dataCreateAt,proto3" json:"dataCreateAt,omitempty"`     //dataCreateAt
	DataUpdateAt   int64  `protobuf:"varint,3,opt,name=dataUpdateAt,proto3" json:"dataUpdateAt,omitempty"`     //dataUpdateAt
	OriginalRepoId uint64 `protobuf:"varint,4,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` //originalRepoId
	ForkRepoId     uint64 `protobuf:"varint,5,opt,name=forkRepoId,proto3" json:"forkRepoId,omitempty"`         //forkRepoId
}

func (x *Fork) Reset() {
	*x = Fork{}
	mi := &file_relation_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fork) ProtoMessage() {}

func (x *Fork) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fork.ProtoReflect.Descriptor instead.
func (*Fork) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{20}
}

func (x *Fork) GetDataId() uint64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Fork) GetDataCreateAt() int64 {
	if x != nil {
		return x.DataCreateAt
	}
	return 0
}

func (x *Fork) GetDataUpdateAt() int64 {
	if x != nil {
		return x.DataUpdateAt
	}
	return 0
}

func (x *Fork) GetOriginalRepoId() uint64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

func (x *Fork) GetForkRepoId() uint64 {
	if x != nil {
		return x.ForkRepoId
	}
	return 0
}

type AddForkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalRepoId uint64 `protobuf:"varint,1,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` //originalRepoId
	ForkRepoId     uint64 `protobuf:"varint,2,opt,name=forkRepoId,proto3" json:"forkRepoId,omitempty"`         //forkRepoId
}

func (x *AddForkReq) Reset() {
	*x = AddForkReq{}
	mi := &file_relation_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddForkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddForkReq) ProtoMessage() {}

func (x *AddForkReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddForkReq.ProtoReflect.Descriptor instead.
func (*AddForkReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{21}
}

func (x *AddForkReq) GetOriginalRepoId() uint64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

func (x *AddForkReq) GetForkRepoId() uint64 {
	if x != nil {
		return x.ForkRepoId
	}
	return 0
}

type AddForkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddForkResp) Reset() {
	*x = AddForkResp{}
	mi := &file_relation_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddForkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddForkResp) ProtoMessage() {}

func (x *AddForkResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddForkResp.ProtoReflect.Descriptor instead.
func (*AddForkResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{22}
}

type DelForkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForkRepoId uint64 `protobuf:"varint,1,opt,name=forkRepoId,proto3" json:"forkRepoId,omitempty"` //forkRepoId
}

func (x *DelForkReq) Reset() {
	*x = DelForkReq{}
	mi := &file_relation_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelForkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelForkReq) ProtoMessage() {}

func (x *DelForkReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelForkReq.ProtoReflect.Descriptor instead.
func (*DelForkReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{23}
}

func (x *DelForkReq) GetForkRepoId() uint64 {
	if x != nil {
		return x.ForkRepoId
	}
	return 0
}

type DelForkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelForkResp) Reset() {
	*x = DelForkResp{}
	mi := &file_relation_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelForkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelForkResp) ProtoMessage() {}

func (x *DelForkResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelForkResp.ProtoReflect.Descriptor instead.
func (*DelForkResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{24}
}

type GetOriginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForkRepoId uint64 `protobuf:"varint,1,opt,name=forkRepoId,proto3" json:"forkRepoId,omitempty"` //forkRepoId
}

func (x *GetOriginReq) Reset() {
	*x = GetOriginReq{}
	mi := &file_relation_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOriginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOriginReq) ProtoMessage() {}

func (x *GetOriginReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOriginReq.ProtoReflect.Descriptor instead.
func (*GetOriginReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{25}
}

func (x *GetOriginReq) GetForkRepoId() uint64 {
	if x != nil {
		return x.ForkRepoId
	}
	return 0
}

type GetOriginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalRepoId uint64 `protobuf:"varint,1,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` //originalRepoId
}

func (x *GetOriginResp) Reset() {
	*x = GetOriginResp{}
	mi := &file_relation_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOriginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOriginResp) ProtoMessage() {}

func (x *GetOriginResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOriginResp.ProtoReflect.Descriptor instead.
func (*GetOriginResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{26}
}

func (x *GetOriginResp) GetOriginalRepoId() uint64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

type SearchForkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                     //page
	Limit          int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                   //limit
	OriginalRepoId uint64 `protobuf:"varint,3,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` //originalRepoId
}

func (x *SearchForkReq) Reset() {
	*x = SearchForkReq{}
	mi := &file_relation_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchForkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchForkReq) ProtoMessage() {}

func (x *SearchForkReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchForkReq.ProtoReflect.Descriptor instead.
func (*SearchForkReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{27}
}

func (x *SearchForkReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchForkReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchForkReq) GetOriginalRepoId() uint64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

type SearchForkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForkRepoIds []uint64 `protobuf:"varint,1,rep,packed,name=forkRepoIds,proto3" json:"forkRepoIds,omitempty"` //forkRepoId
}

func (x *SearchForkResp) Reset() {
	*x = SearchForkResp{}
	mi := &file_relation_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchForkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchForkResp) ProtoMessage() {}

func (x *SearchForkResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchForkResp.ProtoReflect.Descriptor instead.
func (*SearchForkResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{28}
}

func (x *SearchForkResp) GetForkRepoIds() []uint64 {
	if x != nil {
		return x.ForkRepoIds
	}
	return nil
}

// --------------------------------star--------------------------------
type Star struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId       uint64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`             //dataId
	DataCreateAt int64  `protobuf:"varint,2,opt,name=dataCreateAt,proto3" json:"dataCreateAt,omitempty"` //dataCreateAt
	DataUpdateAt int64  `protobuf:"varint,3,opt,name=dataUpdateAt,proto3" json:"dataUpdateAt,omitempty"` //dataUpdateAt
	DeveloperId  uint64 `protobuf:"varint,4,opt,name=developerId,proto3" json:"developerId,omitempty"`   //developerId
	RepoId       uint64 `protobuf:"varint,5,opt,name=repoId,proto3" json:"repoId,omitempty"`             //repoId
}

func (x *Star) Reset() {
	*x = Star{}
	mi := &file_relation_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Star) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Star) ProtoMessage() {}

func (x *Star) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Star.ProtoReflect.Descriptor instead.
func (*Star) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{29}
}

func (x *Star) GetDataId() uint64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Star) GetDataCreateAt() int64 {
	if x != nil {
		return x.DataCreateAt
	}
	return 0
}

func (x *Star) GetDataUpdateAt() int64 {
	if x != nil {
		return x.DataUpdateAt
	}
	return 0
}

func (x *Star) GetDeveloperId() uint64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *Star) GetRepoId() uint64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type AddStarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId uint64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
	RepoId      uint64 `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`           //repoId
}

func (x *AddStarReq) Reset() {
	*x = AddStarReq{}
	mi := &file_relation_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddStarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStarReq) ProtoMessage() {}

func (x *AddStarReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStarReq.ProtoReflect.Descriptor instead.
func (*AddStarReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{30}
}

func (x *AddStarReq) GetDeveloperId() uint64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *AddStarReq) GetRepoId() uint64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type AddStarResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddStarResp) Reset() {
	*x = AddStarResp{}
	mi := &file_relation_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddStarResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStarResp) ProtoMessage() {}

func (x *AddStarResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStarResp.ProtoReflect.Descriptor instead.
func (*AddStarResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{31}
}

type DelStarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId uint64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
	RepoId      uint64 `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`           //repoId
}

func (x *DelStarReq) Reset() {
	*x = DelStarReq{}
	mi := &file_relation_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelStarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStarReq) ProtoMessage() {}

func (x *DelStarReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStarReq.ProtoReflect.Descriptor instead.
func (*DelStarReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{32}
}

func (x *DelStarReq) GetDeveloperId() uint64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *DelStarReq) GetRepoId() uint64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type DelStarResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelStarResp) Reset() {
	*x = DelStarResp{}
	mi := &file_relation_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelStarResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStarResp) ProtoMessage() {}

func (x *DelStarResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStarResp.ProtoReflect.Descriptor instead.
func (*DelStarResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{33}
}

type CheckIfStarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId uint64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
	RepoId      uint64 `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`           //repoId
}

func (x *CheckIfStarReq) Reset() {
	*x = CheckIfStarReq{}
	mi := &file_relation_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckIfStarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfStarReq) ProtoMessage() {}

func (x *CheckIfStarReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfStarReq.ProtoReflect.Descriptor instead.
func (*CheckIfStarReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{34}
}

func (x *CheckIfStarReq) GetDeveloperId() uint64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *CheckIfStarReq) GetRepoId() uint64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type CheckIfStarResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsStar bool `protobuf:"varint,1,opt,name=isStar,proto3" json:"isStar,omitempty"` //isStar
}

func (x *CheckIfStarResp) Reset() {
	*x = CheckIfStarResp{}
	mi := &file_relation_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckIfStarResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfStarResp) ProtoMessage() {}

func (x *CheckIfStarResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfStarResp.ProtoReflect.Descriptor instead.
func (*CheckIfStarResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{35}
}

func (x *CheckIfStarResp) GetIsStar() bool {
	if x != nil {
		return x.IsStar
	}
	return false
}

type SearchStaredRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`               //page
	Limit       int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`             //limit
	DeveloperId uint64 `protobuf:"varint,3,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *SearchStaredRepoReq) Reset() {
	*x = SearchStaredRepoReq{}
	mi := &file_relation_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchStaredRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStaredRepoReq) ProtoMessage() {}

func (x *SearchStaredRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStaredRepoReq.ProtoReflect.Descriptor instead.
func (*SearchStaredRepoReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{36}
}

func (x *SearchStaredRepoReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchStaredRepoReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchStaredRepoReq) GetDeveloperId() uint64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type SearchStaredRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoIds []uint64 `protobuf:"varint,1,rep,packed,name=repoIds,proto3" json:"repoIds,omitempty"` //repoId
}

func (x *SearchStaredRepoResp) Reset() {
	*x = SearchStaredRepoResp{}
	mi := &file_relation_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchStaredRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStaredRepoResp) ProtoMessage() {}

func (x *SearchStaredRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStaredRepoResp.ProtoReflect.Descriptor instead.
func (*SearchStaredRepoResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{37}
}

func (x *SearchStaredRepoResp) GetRepoIds() []uint64 {
	if x != nil {
		return x.RepoIds
	}
	return nil
}

type SearchStaringDevReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64  `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`     //page
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   //limit
	RepoId uint64 `protobuf:"varint,3,opt,name=repoId,proto3" json:"repoId,omitempty"` //repoId
}

func (x *SearchStaringDevReq) Reset() {
	*x = SearchStaringDevReq{}
	mi := &file_relation_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchStaringDevReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStaringDevReq) ProtoMessage() {}

func (x *SearchStaringDevReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStaringDevReq.ProtoReflect.Descriptor instead.
func (*SearchStaringDevReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{38}
}

func (x *SearchStaringDevReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchStaringDevReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchStaringDevReq) GetRepoId() uint64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type SearchStaringDevResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperIds []uint64 `protobuf:"varint,1,rep,packed,name=developerIds,proto3" json:"developerIds,omitempty"` //developerId
}

func (x *SearchStaringDevResp) Reset() {
	*x = SearchStaringDevResp{}
	mi := &file_relation_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchStaringDevResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStaringDevResp) ProtoMessage() {}

func (x *SearchStaringDevResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStaringDevResp.ProtoReflect.Descriptor instead.
func (*SearchStaringDevResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{39}
}

func (x *SearchStaringDevResp) GetDeveloperIds() []uint64 {
	if x != nil {
		return x.DeveloperIds
	}
	return nil
}

var File_relation_proto protoreflect.FileDescriptor

var file_relation_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x22, 0xa6, 0x01, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x4c, 0x0a,
	0x10, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x41,
	0x64, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x29, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x62, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x31, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04,
	0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x06, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x65, 0x64, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x50, 0x0a, 0x0c, 0x44, 0x65, 0x6c,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x22, 0x0f, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x22, 0x54, 0x0a, 0x10,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x49, 0x64, 0x22, 0x2d, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x22, 0x6c, 0x0a, 0x1e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x42, 0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22,
	0x41, 0x0a, 0x1d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42,
	0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49,
	0x64, 0x73, 0x22, 0x6a, 0x0a, 0x1e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x22, 0x42,
	0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x79,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x22,
	0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x04, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x61, 0x74,
	0x61, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64,
	0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70,
	0x6f, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70,
	0x6f, 0x49, 0x64, 0x22, 0x54, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70,
	0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66,
	0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x41, 0x64, 0x64,
	0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x46,
	0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70,
	0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x61,
	0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x22, 0x32, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x73, 0x22, 0xa0, 0x01, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x61,
	0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61,
	0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x53,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x22, 0x0d, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x46, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x0d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x53, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22, 0x4a, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49,
	0x66, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x49, 0x64, 0x22, 0x29, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x53, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x74, 0x61, 0x72, 0x22, 0x61, 0x0a,
	0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x30, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x65, 0x64,
	0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x73, 0x22, 0x57, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72,
	0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x14, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x73, 0x32, 0xd3, 0x08, 0x0a, 0x08, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x39, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f,
	0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0d, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x49, 0x66, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x42, 0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x42, 0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x1b, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x42, 0x79,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x42,
	0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x42, 0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x2a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x0e, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07,
	0x44, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x2a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07, 0x44,
	0x65, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53,
	0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x66, 0x53, 0x74, 0x61, 0x72, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x66, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x45, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6f, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x74, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a,
	0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_relation_proto_rawDescOnce sync.Once
	file_relation_proto_rawDescData = file_relation_proto_rawDesc
)

func file_relation_proto_rawDescGZIP() []byte {
	file_relation_proto_rawDescOnce.Do(func() {
		file_relation_proto_rawDescData = protoimpl.X.CompressGZIP(file_relation_proto_rawDescData)
	})
	return file_relation_proto_rawDescData
}

var file_relation_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_relation_proto_goTypes = []any{
	(*CreateRepo)(nil),                     // 0: pb.CreateRepo
	(*AddCreateRepoReq)(nil),               // 1: pb.AddCreateRepoReq
	(*AddCreateRepoResp)(nil),              // 2: pb.AddCreateRepoResp
	(*DelCreateRepoReq)(nil),               // 3: pb.DelCreateRepoReq
	(*DelCreateRepoResp)(nil),              // 4: pb.DelCreateRepoResp
	(*GetCreatorIdReq)(nil),                // 5: pb.GetCreatorIdReq
	(*GetCreatorIdResp)(nil),               // 6: pb.GetCreatorIdResp
	(*SearchCreatedRepoReq)(nil),           // 7: pb.SearchCreatedRepoReq
	(*SearchCreatedRepoResp)(nil),          // 8: pb.SearchCreatedRepoResp
	(*Follow)(nil),                         // 9: pb.Follow
	(*AddFollowReq)(nil),                   // 10: pb.AddFollowReq
	(*AddFollowResp)(nil),                  // 11: pb.AddFollowResp
	(*DelFollowReq)(nil),                   // 12: pb.DelFollowReq
	(*DelFollowResp)(nil),                  // 13: pb.DelFollowResp
	(*CheckIfFollowReq)(nil),               // 14: pb.CheckIfFollowReq
	(*CheckFollowResp)(nil),                // 15: pb.CheckFollowResp
	(*SearchFollowedByFollowingIdReq)(nil), // 16: pb.SearchFollowedByFollowingIdReq
	(*SearchFollowByFollowingIdResp)(nil),  // 17: pb.SearchFollowByFollowingIdResp
	(*SearchFollowingByFollowedIdReq)(nil), // 18: pb.SearchFollowingByFollowedIdReq
	(*SearchFollowByFollowedIdResp)(nil),   // 19: pb.SearchFollowByFollowedIdResp
	(*Fork)(nil),                           // 20: pb.Fork
	(*AddForkReq)(nil),                     // 21: pb.AddForkReq
	(*AddForkResp)(nil),                    // 22: pb.AddForkResp
	(*DelForkReq)(nil),                     // 23: pb.DelForkReq
	(*DelForkResp)(nil),                    // 24: pb.DelForkResp
	(*GetOriginReq)(nil),                   // 25: pb.GetOriginReq
	(*GetOriginResp)(nil),                  // 26: pb.GetOriginResp
	(*SearchForkReq)(nil),                  // 27: pb.SearchForkReq
	(*SearchForkResp)(nil),                 // 28: pb.SearchForkResp
	(*Star)(nil),                           // 29: pb.Star
	(*AddStarReq)(nil),                     // 30: pb.AddStarReq
	(*AddStarResp)(nil),                    // 31: pb.AddStarResp
	(*DelStarReq)(nil),                     // 32: pb.DelStarReq
	(*DelStarResp)(nil),                    // 33: pb.DelStarResp
	(*CheckIfStarReq)(nil),                 // 34: pb.CheckIfStarReq
	(*CheckIfStarResp)(nil),                // 35: pb.CheckIfStarResp
	(*SearchStaredRepoReq)(nil),            // 36: pb.SearchStaredRepoReq
	(*SearchStaredRepoResp)(nil),           // 37: pb.SearchStaredRepoResp
	(*SearchStaringDevReq)(nil),            // 38: pb.SearchStaringDevReq
	(*SearchStaringDevResp)(nil),           // 39: pb.SearchStaringDevResp
}
var file_relation_proto_depIdxs = []int32{
	1,  // 0: pb.relation.AddCreateRepo:input_type -> pb.AddCreateRepoReq
	3,  // 1: pb.relation.DelCreateRepo:input_type -> pb.DelCreateRepoReq
	5,  // 2: pb.relation.GetCreatorId:input_type -> pb.GetCreatorIdReq
	7,  // 3: pb.relation.SearchCreatedRepo:input_type -> pb.SearchCreatedRepoReq
	10, // 4: pb.relation.AddFollow:input_type -> pb.AddFollowReq
	12, // 5: pb.relation.DelFollow:input_type -> pb.DelFollowReq
	14, // 6: pb.relation.CheckIfFollow:input_type -> pb.CheckIfFollowReq
	16, // 7: pb.relation.SearchFollowedByFollowingId:input_type -> pb.SearchFollowedByFollowingIdReq
	18, // 8: pb.relation.SearchFollowingByFollowedId:input_type -> pb.SearchFollowingByFollowedIdReq
	21, // 9: pb.relation.AddFork:input_type -> pb.AddForkReq
	23, // 10: pb.relation.DelFork:input_type -> pb.DelForkReq
	25, // 11: pb.relation.GetOrigin:input_type -> pb.GetOriginReq
	27, // 12: pb.relation.SearchFork:input_type -> pb.SearchForkReq
	30, // 13: pb.relation.AddStar:input_type -> pb.AddStarReq
	32, // 14: pb.relation.DelStar:input_type -> pb.DelStarReq
	34, // 15: pb.relation.CheckIfStar:input_type -> pb.CheckIfStarReq
	36, // 16: pb.relation.SearchStaredRepo:input_type -> pb.SearchStaredRepoReq
	38, // 17: pb.relation.SearchStaringDev:input_type -> pb.SearchStaringDevReq
	2,  // 18: pb.relation.AddCreateRepo:output_type -> pb.AddCreateRepoResp
	4,  // 19: pb.relation.DelCreateRepo:output_type -> pb.DelCreateRepoResp
	6,  // 20: pb.relation.GetCreatorId:output_type -> pb.GetCreatorIdResp
	8,  // 21: pb.relation.SearchCreatedRepo:output_type -> pb.SearchCreatedRepoResp
	11, // 22: pb.relation.AddFollow:output_type -> pb.AddFollowResp
	13, // 23: pb.relation.DelFollow:output_type -> pb.DelFollowResp
	15, // 24: pb.relation.CheckIfFollow:output_type -> pb.CheckFollowResp
	17, // 25: pb.relation.SearchFollowedByFollowingId:output_type -> pb.SearchFollowByFollowingIdResp
	19, // 26: pb.relation.SearchFollowingByFollowedId:output_type -> pb.SearchFollowByFollowedIdResp
	22, // 27: pb.relation.AddFork:output_type -> pb.AddForkResp
	24, // 28: pb.relation.DelFork:output_type -> pb.DelForkResp
	26, // 29: pb.relation.GetOrigin:output_type -> pb.GetOriginResp
	28, // 30: pb.relation.SearchFork:output_type -> pb.SearchForkResp
	31, // 31: pb.relation.AddStar:output_type -> pb.AddStarResp
	33, // 32: pb.relation.DelStar:output_type -> pb.DelStarResp
	35, // 33: pb.relation.CheckIfStar:output_type -> pb.CheckIfStarResp
	37, // 34: pb.relation.SearchStaredRepo:output_type -> pb.SearchStaredRepoResp
	39, // 35: pb.relation.SearchStaringDev:output_type -> pb.SearchStaringDevResp
	18, // [18:36] is the sub-list for method output_type
	0,  // [0:18] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_relation_proto_init() }
func file_relation_proto_init() {
	if File_relation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_relation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_relation_proto_goTypes,
		DependencyIndexes: file_relation_proto_depIdxs,
		MessageInfos:      file_relation_proto_msgTypes,
	}.Build()
	File_relation_proto = out.File
	file_relation_proto_rawDesc = nil
	file_relation_proto_goTypes = nil
	file_relation_proto_depIdxs = nil
}
