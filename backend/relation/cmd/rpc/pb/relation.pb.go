// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.4
// source: relation.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------createRepo--------------------------------
type CreateRepo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId      int64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`           //dataId
	DeveloperId int64 `protobuf:"varint,2,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
	RepoId      int64 `protobuf:"varint,3,opt,name=repoId,proto3" json:"repoId,omitempty"`           //repoId
}

func (x *CreateRepo) Reset() {
	*x = CreateRepo{}
	mi := &file_relation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRepo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRepo) ProtoMessage() {}

func (x *CreateRepo) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRepo.ProtoReflect.Descriptor instead.
func (*CreateRepo) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRepo) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *CreateRepo) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *CreateRepo) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type AddCreateRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
	RepoId      int64 `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`           //repoId
}

func (x *AddCreateRepoReq) Reset() {
	*x = AddCreateRepoReq{}
	mi := &file_relation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCreateRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCreateRepoReq) ProtoMessage() {}

func (x *AddCreateRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCreateRepoReq.ProtoReflect.Descriptor instead.
func (*AddCreateRepoReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{1}
}

func (x *AddCreateRepoReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *AddCreateRepoReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type AddCreateRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddCreateRepoResp) Reset() {
	*x = AddCreateRepoResp{}
	mi := &file_relation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddCreateRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCreateRepoResp) ProtoMessage() {}

func (x *AddCreateRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCreateRepoResp.ProtoReflect.Descriptor instead.
func (*AddCreateRepoResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{2}
}

func (x *AddCreateRepoResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddCreateRepoResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DelCreateRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoId int64 `protobuf:"varint,1,opt,name=repoId,proto3" json:"repoId,omitempty"` //repoId
}

func (x *DelCreateRepoReq) Reset() {
	*x = DelCreateRepoReq{}
	mi := &file_relation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelCreateRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCreateRepoReq) ProtoMessage() {}

func (x *DelCreateRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCreateRepoReq.ProtoReflect.Descriptor instead.
func (*DelCreateRepoReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{3}
}

func (x *DelCreateRepoReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type DelCreateRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelCreateRepoResp) Reset() {
	*x = DelCreateRepoResp{}
	mi := &file_relation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelCreateRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelCreateRepoResp) ProtoMessage() {}

func (x *DelCreateRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelCreateRepoResp.ProtoReflect.Descriptor instead.
func (*DelCreateRepoResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{4}
}

func (x *DelCreateRepoResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelCreateRepoResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DelAllCreatedRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *DelAllCreatedRepoReq) Reset() {
	*x = DelAllCreatedRepoReq{}
	mi := &file_relation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAllCreatedRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllCreatedRepoReq) ProtoMessage() {}

func (x *DelAllCreatedRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllCreatedRepoReq.ProtoReflect.Descriptor instead.
func (*DelAllCreatedRepoReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{5}
}

func (x *DelAllCreatedRepoReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type DelAllCreatedRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelAllCreatedRepoResp) Reset() {
	*x = DelAllCreatedRepoResp{}
	mi := &file_relation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAllCreatedRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllCreatedRepoResp) ProtoMessage() {}

func (x *DelAllCreatedRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllCreatedRepoResp.ProtoReflect.Descriptor instead.
func (*DelAllCreatedRepoResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{6}
}

func (x *DelAllCreatedRepoResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelAllCreatedRepoResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetCreatorIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoId int64 `protobuf:"varint,1,opt,name=repoId,proto3" json:"repoId,omitempty"` //repoId
}

func (x *GetCreatorIdReq) Reset() {
	*x = GetCreatorIdReq{}
	mi := &file_relation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCreatorIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatorIdReq) ProtoMessage() {}

func (x *GetCreatorIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatorIdReq.ProtoReflect.Descriptor instead.
func (*GetCreatorIdReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{7}
}

func (x *GetCreatorIdReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type GetCreatorIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message     string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DeveloperId int64  `protobuf:"varint,3,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *GetCreatorIdResp) Reset() {
	*x = GetCreatorIdResp{}
	mi := &file_relation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCreatorIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCreatorIdResp) ProtoMessage() {}

func (x *GetCreatorIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCreatorIdResp.ProtoReflect.Descriptor instead.
func (*GetCreatorIdResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{8}
}

func (x *GetCreatorIdResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetCreatorIdResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCreatorIdResp) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type SearchCreatedRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`               //page
	Limit       int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`             //limit
	DeveloperId int64 `protobuf:"varint,3,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *SearchCreatedRepoReq) Reset() {
	*x = SearchCreatedRepoReq{}
	mi := &file_relation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCreatedRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCreatedRepoReq) ProtoMessage() {}

func (x *SearchCreatedRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCreatedRepoReq.ProtoReflect.Descriptor instead.
func (*SearchCreatedRepoReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{9}
}

func (x *SearchCreatedRepoReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchCreatedRepoReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchCreatedRepoReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type SearchCreatedRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RepoIds []int64 `protobuf:"varint,3,rep,packed,name=repoIds,proto3" json:"repoIds,omitempty"` //repoId
}

func (x *SearchCreatedRepoResp) Reset() {
	*x = SearchCreatedRepoResp{}
	mi := &file_relation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCreatedRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCreatedRepoResp) ProtoMessage() {}

func (x *SearchCreatedRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCreatedRepoResp.ProtoReflect.Descriptor instead.
func (*SearchCreatedRepoResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{10}
}

func (x *SearchCreatedRepoResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchCreatedRepoResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchCreatedRepoResp) GetRepoIds() []int64 {
	if x != nil {
		return x.RepoIds
	}
	return nil
}

// --------------------------------follow--------------------------------
type Follow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId      int64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`           //dataId
	FollowingId int64 `protobuf:"varint,2,opt,name=followingId,proto3" json:"followingId,omitempty"` //followingId
	FollowedId  int64 `protobuf:"varint,3,opt,name=followedId,proto3" json:"followedId,omitempty"`   //followedId
}

func (x *Follow) Reset() {
	*x = Follow{}
	mi := &file_relation_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Follow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Follow) ProtoMessage() {}

func (x *Follow) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Follow.ProtoReflect.Descriptor instead.
func (*Follow) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{11}
}

func (x *Follow) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Follow) GetFollowingId() int64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

func (x *Follow) GetFollowedId() int64 {
	if x != nil {
		return x.FollowedId
	}
	return 0
}

type AddFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowingId int64 `protobuf:"varint,1,opt,name=followingId,proto3" json:"followingId,omitempty"` //followingId
	FollowedId  int64 `protobuf:"varint,2,opt,name=followedId,proto3" json:"followedId,omitempty"`   //followedId
}

func (x *AddFollowReq) Reset() {
	*x = AddFollowReq{}
	mi := &file_relation_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFollowReq) ProtoMessage() {}

func (x *AddFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFollowReq.ProtoReflect.Descriptor instead.
func (*AddFollowReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{12}
}

func (x *AddFollowReq) GetFollowingId() int64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

func (x *AddFollowReq) GetFollowedId() int64 {
	if x != nil {
		return x.FollowedId
	}
	return 0
}

type AddFollowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddFollowResp) Reset() {
	*x = AddFollowResp{}
	mi := &file_relation_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddFollowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddFollowResp) ProtoMessage() {}

func (x *AddFollowResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddFollowResp.ProtoReflect.Descriptor instead.
func (*AddFollowResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{13}
}

func (x *AddFollowResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddFollowResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DelFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowingId int64 `protobuf:"varint,1,opt,name=followingId,proto3" json:"followingId,omitempty"` //followingId
	FollowedId  int64 `protobuf:"varint,2,opt,name=followedId,proto3" json:"followedId,omitempty"`   //followedId
}

func (x *DelFollowReq) Reset() {
	*x = DelFollowReq{}
	mi := &file_relation_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFollowReq) ProtoMessage() {}

func (x *DelFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFollowReq.ProtoReflect.Descriptor instead.
func (*DelFollowReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{14}
}

func (x *DelFollowReq) GetFollowingId() int64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

func (x *DelFollowReq) GetFollowedId() int64 {
	if x != nil {
		return x.FollowedId
	}
	return 0
}

type DelFollowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelFollowResp) Reset() {
	*x = DelFollowResp{}
	mi := &file_relation_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelFollowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelFollowResp) ProtoMessage() {}

func (x *DelFollowResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelFollowResp.ProtoReflect.Descriptor instead.
func (*DelFollowResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{15}
}

func (x *DelFollowResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelFollowResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DelAllFollowingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *DelAllFollowingReq) Reset() {
	*x = DelAllFollowingReq{}
	mi := &file_relation_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAllFollowingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllFollowingReq) ProtoMessage() {}

func (x *DelAllFollowingReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllFollowingReq.ProtoReflect.Descriptor instead.
func (*DelAllFollowingReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{16}
}

func (x *DelAllFollowingReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type DelAllFollowingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelAllFollowingResp) Reset() {
	*x = DelAllFollowingResp{}
	mi := &file_relation_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAllFollowingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllFollowingResp) ProtoMessage() {}

func (x *DelAllFollowingResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllFollowingResp.ProtoReflect.Descriptor instead.
func (*DelAllFollowingResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{17}
}

func (x *DelAllFollowingResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelAllFollowingResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DelAllFollowedReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *DelAllFollowedReq) Reset() {
	*x = DelAllFollowedReq{}
	mi := &file_relation_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAllFollowedReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllFollowedReq) ProtoMessage() {}

func (x *DelAllFollowedReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllFollowedReq.ProtoReflect.Descriptor instead.
func (*DelAllFollowedReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{18}
}

func (x *DelAllFollowedReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type DelAllFollowedResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelAllFollowedResp) Reset() {
	*x = DelAllFollowedResp{}
	mi := &file_relation_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAllFollowedResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllFollowedResp) ProtoMessage() {}

func (x *DelAllFollowedResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllFollowedResp.ProtoReflect.Descriptor instead.
func (*DelAllFollowedResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{19}
}

func (x *DelAllFollowedResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelAllFollowedResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CheckIfFollowReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowingId int64 `protobuf:"varint,1,opt,name=followingId,proto3" json:"followingId,omitempty"` //followingId
	FollowedId  int64 `protobuf:"varint,2,opt,name=followedId,proto3" json:"followedId,omitempty"`   //followedId
}

func (x *CheckIfFollowReq) Reset() {
	*x = CheckIfFollowReq{}
	mi := &file_relation_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckIfFollowReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfFollowReq) ProtoMessage() {}

func (x *CheckIfFollowReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfFollowReq.ProtoReflect.Descriptor instead.
func (*CheckIfFollowReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{20}
}

func (x *CheckIfFollowReq) GetFollowingId() int64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

func (x *CheckIfFollowReq) GetFollowedId() int64 {
	if x != nil {
		return x.FollowedId
	}
	return 0
}

type CheckFollowResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	IsFollow bool   `protobuf:"varint,3,opt,name=isFollow,proto3" json:"isFollow,omitempty"` //isFollow
}

func (x *CheckFollowResp) Reset() {
	*x = CheckFollowResp{}
	mi := &file_relation_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckFollowResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckFollowResp) ProtoMessage() {}

func (x *CheckFollowResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckFollowResp.ProtoReflect.Descriptor instead.
func (*CheckFollowResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{21}
}

func (x *CheckFollowResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckFollowResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckFollowResp) GetIsFollow() bool {
	if x != nil {
		return x.IsFollow
	}
	return false
}

type SearchFollowedByFollowingIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`               //page
	Limit       int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`             //limit
	FollowingId int64 `protobuf:"varint,3,opt,name=followingId,proto3" json:"followingId,omitempty"` //followingId
}

func (x *SearchFollowedByFollowingIdReq) Reset() {
	*x = SearchFollowedByFollowingIdReq{}
	mi := &file_relation_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFollowedByFollowingIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFollowedByFollowingIdReq) ProtoMessage() {}

func (x *SearchFollowedByFollowingIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFollowedByFollowingIdReq.ProtoReflect.Descriptor instead.
func (*SearchFollowedByFollowingIdReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{22}
}

func (x *SearchFollowedByFollowingIdReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchFollowedByFollowingIdReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchFollowedByFollowingIdReq) GetFollowingId() int64 {
	if x != nil {
		return x.FollowingId
	}
	return 0
}

type SearchFollowByFollowingIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message     string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	FollowedIds []int64 `protobuf:"varint,3,rep,packed,name=followedIds,proto3" json:"followedIds,omitempty"` //followedId
}

func (x *SearchFollowByFollowingIdResp) Reset() {
	*x = SearchFollowByFollowingIdResp{}
	mi := &file_relation_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFollowByFollowingIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFollowByFollowingIdResp) ProtoMessage() {}

func (x *SearchFollowByFollowingIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFollowByFollowingIdResp.ProtoReflect.Descriptor instead.
func (*SearchFollowByFollowingIdResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{23}
}

func (x *SearchFollowByFollowingIdResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchFollowByFollowingIdResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchFollowByFollowingIdResp) GetFollowedIds() []int64 {
	if x != nil {
		return x.FollowedIds
	}
	return nil
}

type SearchFollowingByFollowedIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page       int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`             //page
	Limit      int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`           //limit
	FollowedId int64 `protobuf:"varint,3,opt,name=followedId,proto3" json:"followedId,omitempty"` //followedId
}

func (x *SearchFollowingByFollowedIdReq) Reset() {
	*x = SearchFollowingByFollowedIdReq{}
	mi := &file_relation_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFollowingByFollowedIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFollowingByFollowedIdReq) ProtoMessage() {}

func (x *SearchFollowingByFollowedIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFollowingByFollowedIdReq.ProtoReflect.Descriptor instead.
func (*SearchFollowingByFollowedIdReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{24}
}

func (x *SearchFollowingByFollowedIdReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchFollowingByFollowedIdReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchFollowingByFollowedIdReq) GetFollowedId() int64 {
	if x != nil {
		return x.FollowedId
	}
	return 0
}

type SearchFollowByFollowedIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message      string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	FollowingIds []int64 `protobuf:"varint,3,rep,packed,name=followingIds,proto3" json:"followingIds,omitempty"` //followingId
}

func (x *SearchFollowByFollowedIdResp) Reset() {
	*x = SearchFollowByFollowedIdResp{}
	mi := &file_relation_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchFollowByFollowedIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchFollowByFollowedIdResp) ProtoMessage() {}

func (x *SearchFollowByFollowedIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchFollowByFollowedIdResp.ProtoReflect.Descriptor instead.
func (*SearchFollowByFollowedIdResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{25}
}

func (x *SearchFollowByFollowedIdResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchFollowByFollowedIdResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchFollowByFollowedIdResp) GetFollowingIds() []int64 {
	if x != nil {
		return x.FollowingIds
	}
	return nil
}

// --------------------------------fork--------------------------------
type Fork struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId         int64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`                 //dataId
	OriginalRepoId int64 `protobuf:"varint,2,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` //originalRepoId
	ForkRepoId     int64 `protobuf:"varint,3,opt,name=forkRepoId,proto3" json:"forkRepoId,omitempty"`         //forkRepoId
}

func (x *Fork) Reset() {
	*x = Fork{}
	mi := &file_relation_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Fork) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fork) ProtoMessage() {}

func (x *Fork) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fork.ProtoReflect.Descriptor instead.
func (*Fork) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{26}
}

func (x *Fork) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Fork) GetOriginalRepoId() int64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

func (x *Fork) GetForkRepoId() int64 {
	if x != nil {
		return x.ForkRepoId
	}
	return 0
}

type AddForkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalRepoId int64 `protobuf:"varint,1,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` //originalRepoId
	ForkRepoId     int64 `protobuf:"varint,2,opt,name=forkRepoId,proto3" json:"forkRepoId,omitempty"`         //forkRepoId
}

func (x *AddForkReq) Reset() {
	*x = AddForkReq{}
	mi := &file_relation_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddForkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddForkReq) ProtoMessage() {}

func (x *AddForkReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddForkReq.ProtoReflect.Descriptor instead.
func (*AddForkReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{27}
}

func (x *AddForkReq) GetOriginalRepoId() int64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

func (x *AddForkReq) GetForkRepoId() int64 {
	if x != nil {
		return x.ForkRepoId
	}
	return 0
}

type AddForkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddForkResp) Reset() {
	*x = AddForkResp{}
	mi := &file_relation_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddForkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddForkResp) ProtoMessage() {}

func (x *AddForkResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddForkResp.ProtoReflect.Descriptor instead.
func (*AddForkResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{28}
}

func (x *AddForkResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddForkResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DelForkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForkRepoId int64 `protobuf:"varint,1,opt,name=forkRepoId,proto3" json:"forkRepoId,omitempty"` //forkRepoId
}

func (x *DelForkReq) Reset() {
	*x = DelForkReq{}
	mi := &file_relation_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelForkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelForkReq) ProtoMessage() {}

func (x *DelForkReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelForkReq.ProtoReflect.Descriptor instead.
func (*DelForkReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{29}
}

func (x *DelForkReq) GetForkRepoId() int64 {
	if x != nil {
		return x.ForkRepoId
	}
	return 0
}

type DelForkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelForkResp) Reset() {
	*x = DelForkResp{}
	mi := &file_relation_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelForkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelForkResp) ProtoMessage() {}

func (x *DelForkResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelForkResp.ProtoReflect.Descriptor instead.
func (*DelForkResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{30}
}

func (x *DelForkResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelForkResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DelAllForkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OriginalRepoId int64 `protobuf:"varint,1,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` //originalRepoId
}

func (x *DelAllForkReq) Reset() {
	*x = DelAllForkReq{}
	mi := &file_relation_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAllForkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllForkReq) ProtoMessage() {}

func (x *DelAllForkReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllForkReq.ProtoReflect.Descriptor instead.
func (*DelAllForkReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{31}
}

func (x *DelAllForkReq) GetOriginalRepoId() int64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

type DelAllForkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelAllForkResp) Reset() {
	*x = DelAllForkResp{}
	mi := &file_relation_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAllForkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllForkResp) ProtoMessage() {}

func (x *DelAllForkResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllForkResp.ProtoReflect.Descriptor instead.
func (*DelAllForkResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{32}
}

func (x *DelAllForkResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelAllForkResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetOriginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ForkRepoId int64 `protobuf:"varint,1,opt,name=forkRepoId,proto3" json:"forkRepoId,omitempty"` //forkRepoId
}

func (x *GetOriginReq) Reset() {
	*x = GetOriginReq{}
	mi := &file_relation_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOriginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOriginReq) ProtoMessage() {}

func (x *GetOriginReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOriginReq.ProtoReflect.Descriptor instead.
func (*GetOriginReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{33}
}

func (x *GetOriginReq) GetForkRepoId() int64 {
	if x != nil {
		return x.ForkRepoId
	}
	return 0
}

type GetOriginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code           int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message        string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	OriginalRepoId int64  `protobuf:"varint,3,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` //originalRepoId
}

func (x *GetOriginResp) Reset() {
	*x = GetOriginResp{}
	mi := &file_relation_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOriginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOriginResp) ProtoMessage() {}

func (x *GetOriginResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOriginResp.ProtoReflect.Descriptor instead.
func (*GetOriginResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{34}
}

func (x *GetOriginResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetOriginResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetOriginResp) GetOriginalRepoId() int64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

type SearchForkReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                     //page
	Limit          int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                   //limit
	OriginalRepoId int64 `protobuf:"varint,3,opt,name=originalRepoId,proto3" json:"originalRepoId,omitempty"` //originalRepoId
}

func (x *SearchForkReq) Reset() {
	*x = SearchForkReq{}
	mi := &file_relation_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchForkReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchForkReq) ProtoMessage() {}

func (x *SearchForkReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchForkReq.ProtoReflect.Descriptor instead.
func (*SearchForkReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{35}
}

func (x *SearchForkReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchForkReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchForkReq) GetOriginalRepoId() int64 {
	if x != nil {
		return x.OriginalRepoId
	}
	return 0
}

type SearchForkResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        int64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message     string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ForkRepoIds []int64 `protobuf:"varint,3,rep,packed,name=forkRepoIds,proto3" json:"forkRepoIds,omitempty"` //forkRepoId
}

func (x *SearchForkResp) Reset() {
	*x = SearchForkResp{}
	mi := &file_relation_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchForkResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchForkResp) ProtoMessage() {}

func (x *SearchForkResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchForkResp.ProtoReflect.Descriptor instead.
func (*SearchForkResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{36}
}

func (x *SearchForkResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchForkResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchForkResp) GetForkRepoIds() []int64 {
	if x != nil {
		return x.ForkRepoIds
	}
	return nil
}

// --------------------------------star--------------------------------
type Star struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId      int64 `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`           //dataId
	DeveloperId int64 `protobuf:"varint,2,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
	RepoId      int64 `protobuf:"varint,3,opt,name=repoId,proto3" json:"repoId,omitempty"`           //repoId
}

func (x *Star) Reset() {
	*x = Star{}
	mi := &file_relation_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Star) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Star) ProtoMessage() {}

func (x *Star) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Star.ProtoReflect.Descriptor instead.
func (*Star) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{37}
}

func (x *Star) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Star) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *Star) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type AddStarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
	RepoId      int64 `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`           //repoId
}

func (x *AddStarReq) Reset() {
	*x = AddStarReq{}
	mi := &file_relation_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddStarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStarReq) ProtoMessage() {}

func (x *AddStarReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStarReq.ProtoReflect.Descriptor instead.
func (*AddStarReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{38}
}

func (x *AddStarReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *AddStarReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type AddStarResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddStarResp) Reset() {
	*x = AddStarResp{}
	mi := &file_relation_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddStarResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddStarResp) ProtoMessage() {}

func (x *AddStarResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddStarResp.ProtoReflect.Descriptor instead.
func (*AddStarResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{39}
}

func (x *AddStarResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddStarResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DelStarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
	RepoId      int64 `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`           //repoId
}

func (x *DelStarReq) Reset() {
	*x = DelStarReq{}
	mi := &file_relation_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelStarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStarReq) ProtoMessage() {}

func (x *DelStarReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStarReq.ProtoReflect.Descriptor instead.
func (*DelStarReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{40}
}

func (x *DelStarReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *DelStarReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type DelStarResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelStarResp) Reset() {
	*x = DelStarResp{}
	mi := &file_relation_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelStarResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelStarResp) ProtoMessage() {}

func (x *DelStarResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelStarResp.ProtoReflect.Descriptor instead.
func (*DelStarResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{41}
}

func (x *DelStarResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelStarResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DelAllStarredRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *DelAllStarredRepoReq) Reset() {
	*x = DelAllStarredRepoReq{}
	mi := &file_relation_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAllStarredRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllStarredRepoReq) ProtoMessage() {}

func (x *DelAllStarredRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllStarredRepoReq.ProtoReflect.Descriptor instead.
func (*DelAllStarredRepoReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{42}
}

func (x *DelAllStarredRepoReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type DelAllStarredRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelAllStarredRepoResp) Reset() {
	*x = DelAllStarredRepoResp{}
	mi := &file_relation_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAllStarredRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllStarredRepoResp) ProtoMessage() {}

func (x *DelAllStarredRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllStarredRepoResp.ProtoReflect.Descriptor instead.
func (*DelAllStarredRepoResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{43}
}

func (x *DelAllStarredRepoResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelAllStarredRepoResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DelAllStaringDevReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepoId int64 `protobuf:"varint,1,opt,name=repoId,proto3" json:"repoId,omitempty"` //repoId
}

func (x *DelAllStaringDevReq) Reset() {
	*x = DelAllStaringDevReq{}
	mi := &file_relation_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAllStaringDevReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllStaringDevReq) ProtoMessage() {}

func (x *DelAllStaringDevReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllStaringDevReq.ProtoReflect.Descriptor instead.
func (*DelAllStaringDevReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{44}
}

func (x *DelAllStaringDevReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type DelAllStaringDevResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelAllStaringDevResp) Reset() {
	*x = DelAllStaringDevResp{}
	mi := &file_relation_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAllStaringDevResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAllStaringDevResp) ProtoMessage() {}

func (x *DelAllStaringDevResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAllStaringDevResp.ProtoReflect.Descriptor instead.
func (*DelAllStaringDevResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{45}
}

func (x *DelAllStaringDevResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelAllStaringDevResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CheckIfStarReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
	RepoId      int64 `protobuf:"varint,2,opt,name=repoId,proto3" json:"repoId,omitempty"`           //repoId
}

func (x *CheckIfStarReq) Reset() {
	*x = CheckIfStarReq{}
	mi := &file_relation_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckIfStarReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfStarReq) ProtoMessage() {}

func (x *CheckIfStarReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfStarReq.ProtoReflect.Descriptor instead.
func (*CheckIfStarReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{46}
}

func (x *CheckIfStarReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

func (x *CheckIfStarReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type CheckIfStarResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	IsStar  bool   `protobuf:"varint,3,opt,name=isStar,proto3" json:"isStar,omitempty"` //isStar
}

func (x *CheckIfStarResp) Reset() {
	*x = CheckIfStarResp{}
	mi := &file_relation_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckIfStarResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIfStarResp) ProtoMessage() {}

func (x *CheckIfStarResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIfStarResp.ProtoReflect.Descriptor instead.
func (*CheckIfStarResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{47}
}

func (x *CheckIfStarResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckIfStarResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckIfStarResp) GetIsStar() bool {
	if x != nil {
		return x.IsStar
	}
	return false
}

type SearchStarredRepoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page        int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`               //page
	Limit       int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`             //limit
	DeveloperId int64 `protobuf:"varint,3,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *SearchStarredRepoReq) Reset() {
	*x = SearchStarredRepoReq{}
	mi := &file_relation_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchStarredRepoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStarredRepoReq) ProtoMessage() {}

func (x *SearchStarredRepoReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStarredRepoReq.ProtoReflect.Descriptor instead.
func (*SearchStarredRepoReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{48}
}

func (x *SearchStarredRepoReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchStarredRepoReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchStarredRepoReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type SearchStarredRepoResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RepoIds []int64 `protobuf:"varint,3,rep,packed,name=repoIds,proto3" json:"repoIds,omitempty"` //repoId
}

func (x *SearchStarredRepoResp) Reset() {
	*x = SearchStarredRepoResp{}
	mi := &file_relation_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchStarredRepoResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStarredRepoResp) ProtoMessage() {}

func (x *SearchStarredRepoResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStarredRepoResp.ProtoReflect.Descriptor instead.
func (*SearchStarredRepoResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{49}
}

func (x *SearchStarredRepoResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchStarredRepoResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchStarredRepoResp) GetRepoIds() []int64 {
	if x != nil {
		return x.RepoIds
	}
	return nil
}

type SearchStaringDevReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`     //page
	Limit  int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`   //limit
	RepoId int64 `protobuf:"varint,3,opt,name=repoId,proto3" json:"repoId,omitempty"` //repoId
}

func (x *SearchStaringDevReq) Reset() {
	*x = SearchStaringDevReq{}
	mi := &file_relation_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchStaringDevReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStaringDevReq) ProtoMessage() {}

func (x *SearchStaringDevReq) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStaringDevReq.ProtoReflect.Descriptor instead.
func (*SearchStaringDevReq) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{50}
}

func (x *SearchStaringDevReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchStaringDevReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchStaringDevReq) GetRepoId() int64 {
	if x != nil {
		return x.RepoId
	}
	return 0
}

type SearchStaringDevResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message      string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	DeveloperIds []int64 `protobuf:"varint,3,rep,packed,name=developerIds,proto3" json:"developerIds,omitempty"` //developerId
}

func (x *SearchStaringDevResp) Reset() {
	*x = SearchStaringDevResp{}
	mi := &file_relation_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchStaringDevResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchStaringDevResp) ProtoMessage() {}

func (x *SearchStaringDevResp) ProtoReflect() protoreflect.Message {
	mi := &file_relation_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchStaringDevResp.ProtoReflect.Descriptor instead.
func (*SearchStaringDevResp) Descriptor() ([]byte, []int) {
	return file_relation_proto_rawDescGZIP(), []int{51}
}

func (x *SearchStaringDevResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchStaringDevResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchStaringDevResp) GetDeveloperIds() []int64 {
	if x != nil {
		return x.DeveloperIds
	}
	return nil
}

var File_relation_proto protoreflect.FileDescriptor

var file_relation_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x22, 0x5e, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x49, 0x64, 0x22, 0x41, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70,
	0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x22, 0x41, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x38, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x45,
	0x0a, 0x15, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x29, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x22, 0x62, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x62, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x07, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x73, 0x22, 0x62, 0x0a, 0x06, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x22, 0x50, 0x0a,
	0x0c, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x22,
	0x3d, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x50,
	0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64,
	0x22, 0x3d, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x36, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65,
	0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x41, 0x6c,
	0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65,
	0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x54, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x49, 0x66, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x66,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x22, 0x5b, 0x0a,
	0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x22, 0x6c, 0x0a, 0x1e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x42, 0x79, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x1d, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x73, 0x22, 0x6a, 0x0a, 0x1e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x42, 0x79, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x64, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x1c, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x22, 0x66, 0x0a, 0x04, 0x46, 0x6f, 0x72, 0x6b, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22,
	0x54, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a,
	0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52,
	0x65, 0x70, 0x6f, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70,
	0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52,
	0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x2c, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x22, 0x3b, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x26,
	0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x3e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c,
	0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6b,
	0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x65, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x61, 0x0a,
	0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64,
	0x22, 0x60, 0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x73, 0x22, 0x58, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x46, 0x0a, 0x0a,
	0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65,
	0x70, 0x6f, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x46, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0b, 0x44, 0x65, 0x6c,
	0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x38, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x45, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65,
	0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2d, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x41, 0x6c,
	0x6c, 0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4a, 0x0a, 0x0e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x66, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53,
	0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x74, 0x61,
	0x72, 0x22, 0x62, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x72,
	0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x5f, 0x0a, 0x15, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53,
	0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x65, 0x70, 0x6f, 0x49, 0x64, 0x73, 0x22, 0x57, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x70, 0x6f, 0x49, 0x64, 0x22,
	0x68, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x73, 0x32, 0xeb, 0x0b, 0x0a, 0x08, 0x72, 0x65,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x3c, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x13, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x18, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x30, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71,
	0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52,
	0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46,
	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x15, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0d, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x49, 0x66, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x14, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6f, 0x6c, 0x6c,
	0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x12, 0x64, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x42, 0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x42, 0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x79, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x63, 0x0a, 0x1b,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x42,
	0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x12, 0x22, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67,
	0x42, 0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x6c, 0x6c, 0x6f,
	0x77, 0x42, 0x79, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x49, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x64, 0x64, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a,
	0x07, 0x44, 0x65, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x33, 0x0a, 0x0a, 0x44, 0x65, 0x6c,
	0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c,
	0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e,
	0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x2e, 0x70, 0x62,
	0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x33, 0x0a, 0x0a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x12, 0x11,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6b, 0x52, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x46, 0x6f, 0x72,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72,
	0x12, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x2a, 0x0a, 0x07, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x12, 0x0e, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a,
	0x11, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x12, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52,
	0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x41, 0x6c,
	0x6c, 0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x12, 0x17, 0x2e, 0x70, 0x62,
	0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65,
	0x76, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x12, 0x36,
	0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x53, 0x74, 0x61, 0x72, 0x12, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x53, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x66, 0x53, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x48, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x18, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65,
	0x70, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x74, 0x61, 0x72, 0x72, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x45, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x44, 0x65, 0x76, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x76, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e,
	0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x74, 0x61, 0x72, 0x69, 0x6e, 0x67,
	0x44, 0x65, 0x76, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_relation_proto_rawDescOnce sync.Once
	file_relation_proto_rawDescData = file_relation_proto_rawDesc
)

func file_relation_proto_rawDescGZIP() []byte {
	file_relation_proto_rawDescOnce.Do(func() {
		file_relation_proto_rawDescData = protoimpl.X.CompressGZIP(file_relation_proto_rawDescData)
	})
	return file_relation_proto_rawDescData
}

var file_relation_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_relation_proto_goTypes = []any{
	(*CreateRepo)(nil),                     // 0: pb.CreateRepo
	(*AddCreateRepoReq)(nil),               // 1: pb.AddCreateRepoReq
	(*AddCreateRepoResp)(nil),              // 2: pb.AddCreateRepoResp
	(*DelCreateRepoReq)(nil),               // 3: pb.DelCreateRepoReq
	(*DelCreateRepoResp)(nil),              // 4: pb.DelCreateRepoResp
	(*DelAllCreatedRepoReq)(nil),           // 5: pb.DelAllCreatedRepoReq
	(*DelAllCreatedRepoResp)(nil),          // 6: pb.DelAllCreatedRepoResp
	(*GetCreatorIdReq)(nil),                // 7: pb.GetCreatorIdReq
	(*GetCreatorIdResp)(nil),               // 8: pb.GetCreatorIdResp
	(*SearchCreatedRepoReq)(nil),           // 9: pb.SearchCreatedRepoReq
	(*SearchCreatedRepoResp)(nil),          // 10: pb.SearchCreatedRepoResp
	(*Follow)(nil),                         // 11: pb.Follow
	(*AddFollowReq)(nil),                   // 12: pb.AddFollowReq
	(*AddFollowResp)(nil),                  // 13: pb.AddFollowResp
	(*DelFollowReq)(nil),                   // 14: pb.DelFollowReq
	(*DelFollowResp)(nil),                  // 15: pb.DelFollowResp
	(*DelAllFollowingReq)(nil),             // 16: pb.DelAllFollowingReq
	(*DelAllFollowingResp)(nil),            // 17: pb.DelAllFollowingResp
	(*DelAllFollowedReq)(nil),              // 18: pb.DelAllFollowedReq
	(*DelAllFollowedResp)(nil),             // 19: pb.DelAllFollowedResp
	(*CheckIfFollowReq)(nil),               // 20: pb.CheckIfFollowReq
	(*CheckFollowResp)(nil),                // 21: pb.CheckFollowResp
	(*SearchFollowedByFollowingIdReq)(nil), // 22: pb.SearchFollowedByFollowingIdReq
	(*SearchFollowByFollowingIdResp)(nil),  // 23: pb.SearchFollowByFollowingIdResp
	(*SearchFollowingByFollowedIdReq)(nil), // 24: pb.SearchFollowingByFollowedIdReq
	(*SearchFollowByFollowedIdResp)(nil),   // 25: pb.SearchFollowByFollowedIdResp
	(*Fork)(nil),                           // 26: pb.Fork
	(*AddForkReq)(nil),                     // 27: pb.AddForkReq
	(*AddForkResp)(nil),                    // 28: pb.AddForkResp
	(*DelForkReq)(nil),                     // 29: pb.DelForkReq
	(*DelForkResp)(nil),                    // 30: pb.DelForkResp
	(*DelAllForkReq)(nil),                  // 31: pb.DelAllForkReq
	(*DelAllForkResp)(nil),                 // 32: pb.DelAllForkResp
	(*GetOriginReq)(nil),                   // 33: pb.GetOriginReq
	(*GetOriginResp)(nil),                  // 34: pb.GetOriginResp
	(*SearchForkReq)(nil),                  // 35: pb.SearchForkReq
	(*SearchForkResp)(nil),                 // 36: pb.SearchForkResp
	(*Star)(nil),                           // 37: pb.Star
	(*AddStarReq)(nil),                     // 38: pb.AddStarReq
	(*AddStarResp)(nil),                    // 39: pb.AddStarResp
	(*DelStarReq)(nil),                     // 40: pb.DelStarReq
	(*DelStarResp)(nil),                    // 41: pb.DelStarResp
	(*DelAllStarredRepoReq)(nil),           // 42: pb.DelAllStarredRepoReq
	(*DelAllStarredRepoResp)(nil),          // 43: pb.DelAllStarredRepoResp
	(*DelAllStaringDevReq)(nil),            // 44: pb.DelAllStaringDevReq
	(*DelAllStaringDevResp)(nil),           // 45: pb.DelAllStaringDevResp
	(*CheckIfStarReq)(nil),                 // 46: pb.CheckIfStarReq
	(*CheckIfStarResp)(nil),                // 47: pb.CheckIfStarResp
	(*SearchStarredRepoReq)(nil),           // 48: pb.SearchStarredRepoReq
	(*SearchStarredRepoResp)(nil),          // 49: pb.SearchStarredRepoResp
	(*SearchStaringDevReq)(nil),            // 50: pb.SearchStaringDevReq
	(*SearchStaringDevResp)(nil),           // 51: pb.SearchStaringDevResp
}
var file_relation_proto_depIdxs = []int32{
	1,  // 0: pb.relation.AddCreateRepo:input_type -> pb.AddCreateRepoReq
	3,  // 1: pb.relation.DelCreateRepo:input_type -> pb.DelCreateRepoReq
	5,  // 2: pb.relation.DelAllCreatedRepo:input_type -> pb.DelAllCreatedRepoReq
	7,  // 3: pb.relation.GetCreatorId:input_type -> pb.GetCreatorIdReq
	9,  // 4: pb.relation.SearchCreatedRepo:input_type -> pb.SearchCreatedRepoReq
	12, // 5: pb.relation.AddFollow:input_type -> pb.AddFollowReq
	14, // 6: pb.relation.DelFollow:input_type -> pb.DelFollowReq
	16, // 7: pb.relation.DelAllFollowing:input_type -> pb.DelAllFollowingReq
	18, // 8: pb.relation.DelAllFollowed:input_type -> pb.DelAllFollowedReq
	20, // 9: pb.relation.CheckIfFollow:input_type -> pb.CheckIfFollowReq
	22, // 10: pb.relation.SearchFollowedByFollowingId:input_type -> pb.SearchFollowedByFollowingIdReq
	24, // 11: pb.relation.SearchFollowingByFollowedId:input_type -> pb.SearchFollowingByFollowedIdReq
	27, // 12: pb.relation.AddFork:input_type -> pb.AddForkReq
	29, // 13: pb.relation.DelFork:input_type -> pb.DelForkReq
	31, // 14: pb.relation.DelAllFork:input_type -> pb.DelAllForkReq
	33, // 15: pb.relation.GetOrigin:input_type -> pb.GetOriginReq
	35, // 16: pb.relation.SearchFork:input_type -> pb.SearchForkReq
	38, // 17: pb.relation.AddStar:input_type -> pb.AddStarReq
	40, // 18: pb.relation.DelStar:input_type -> pb.DelStarReq
	42, // 19: pb.relation.DelAllStarredRepo:input_type -> pb.DelAllStarredRepoReq
	44, // 20: pb.relation.DelAllStaringDev:input_type -> pb.DelAllStaringDevReq
	46, // 21: pb.relation.CheckIfStar:input_type -> pb.CheckIfStarReq
	48, // 22: pb.relation.SearchStarredRepo:input_type -> pb.SearchStarredRepoReq
	50, // 23: pb.relation.SearchStaringDev:input_type -> pb.SearchStaringDevReq
	2,  // 24: pb.relation.AddCreateRepo:output_type -> pb.AddCreateRepoResp
	4,  // 25: pb.relation.DelCreateRepo:output_type -> pb.DelCreateRepoResp
	6,  // 26: pb.relation.DelAllCreatedRepo:output_type -> pb.DelAllCreatedRepoResp
	8,  // 27: pb.relation.GetCreatorId:output_type -> pb.GetCreatorIdResp
	10, // 28: pb.relation.SearchCreatedRepo:output_type -> pb.SearchCreatedRepoResp
	13, // 29: pb.relation.AddFollow:output_type -> pb.AddFollowResp
	15, // 30: pb.relation.DelFollow:output_type -> pb.DelFollowResp
	17, // 31: pb.relation.DelAllFollowing:output_type -> pb.DelAllFollowingResp
	19, // 32: pb.relation.DelAllFollowed:output_type -> pb.DelAllFollowedResp
	21, // 33: pb.relation.CheckIfFollow:output_type -> pb.CheckFollowResp
	23, // 34: pb.relation.SearchFollowedByFollowingId:output_type -> pb.SearchFollowByFollowingIdResp
	25, // 35: pb.relation.SearchFollowingByFollowedId:output_type -> pb.SearchFollowByFollowedIdResp
	28, // 36: pb.relation.AddFork:output_type -> pb.AddForkResp
	30, // 37: pb.relation.DelFork:output_type -> pb.DelForkResp
	32, // 38: pb.relation.DelAllFork:output_type -> pb.DelAllForkResp
	34, // 39: pb.relation.GetOrigin:output_type -> pb.GetOriginResp
	36, // 40: pb.relation.SearchFork:output_type -> pb.SearchForkResp
	39, // 41: pb.relation.AddStar:output_type -> pb.AddStarResp
	41, // 42: pb.relation.DelStar:output_type -> pb.DelStarResp
	43, // 43: pb.relation.DelAllStarredRepo:output_type -> pb.DelAllStarredRepoResp
	45, // 44: pb.relation.DelAllStaringDev:output_type -> pb.DelAllStaringDevResp
	47, // 45: pb.relation.CheckIfStar:output_type -> pb.CheckIfStarResp
	49, // 46: pb.relation.SearchStarredRepo:output_type -> pb.SearchStarredRepoResp
	51, // 47: pb.relation.SearchStaringDev:output_type -> pb.SearchStaringDevResp
	24, // [24:48] is the sub-list for method output_type
	0,  // [0:24] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_relation_proto_init() }
func file_relation_proto_init() {
	if File_relation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_relation_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_relation_proto_goTypes,
		DependencyIndexes: file_relation_proto_depIdxs,
		MessageInfos:      file_relation_proto_msgTypes,
	}.Build()
	File_relation_proto = out.File
	file_relation_proto_rawDesc = nil
	file_relation_proto_goTypes = nil
	file_relation_proto_depIdxs = nil
}
