// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: analysis.proto

package server

import (
	"context"

	"github.com/ShellWen/GitPulse/analysis/cmd/rpc/internal/logic"
	"github.com/ShellWen/GitPulse/analysis/cmd/rpc/internal/svc"
	"github.com/ShellWen/GitPulse/analysis/cmd/rpc/pb"
)

type AnalysisServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedAnalysisServer
}

func NewAnalysisServer(svcCtx *svc.ServiceContext) *AnalysisServer {
	return &AnalysisServer{
		svcCtx: svcCtx,
	}
}

// -----------------------analysis-----------------------
func (s *AnalysisServer) AddAnalysis(ctx context.Context, in *pb.AddAnalysisReq) (*pb.AddAnalysisResp, error) {
	l := logic.NewAddAnalysisLogic(ctx, s.svcCtx)
	return l.AddAnalysis(in)
}

func (s *AnalysisServer) UpdateAnalysis(ctx context.Context, in *pb.UpdateAnalysisReq) (*pb.UpdateAnalysisResp, error) {
	l := logic.NewUpdateAnalysisLogic(ctx, s.svcCtx)
	return l.UpdateAnalysis(in)
}

func (s *AnalysisServer) DelAnalysis(ctx context.Context, in *pb.DelAnalysisReq) (*pb.DelAnalysisResp, error) {
	l := logic.NewDelAnalysisLogic(ctx, s.svcCtx)
	return l.DelAnalysis(in)
}

func (s *AnalysisServer) GetAnalysis(ctx context.Context, in *pb.GetAnalysisReq) (*pb.GetAnalysisResp, error) {
	l := logic.NewGetAnalysisLogic(ctx, s.svcCtx)
	return l.GetAnalysis(in)
}
