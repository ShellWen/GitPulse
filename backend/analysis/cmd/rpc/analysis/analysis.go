// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3
// Source: analysis.proto

package analysis

import (
	"context"

	"github.com/ShellWen/GitPulse/analysis/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddAnalysisReq     = pb.AddAnalysisReq
	AddAnalysisResp    = pb.AddAnalysisResp
	Analysis           = pb.Analysis
	DelAnalysisReq     = pb.DelAnalysisReq
	DelAnalysisResp    = pb.DelAnalysisResp
	GetAnalysisReq     = pb.GetAnalysisReq
	GetAnalysisResp    = pb.GetAnalysisResp
	UpdateAnalysisReq  = pb.UpdateAnalysisReq
	UpdateAnalysisResp = pb.UpdateAnalysisResp

	AnalysisZrpcClient interface {
		// -----------------------analysis-----------------------
		AddAnalysis(ctx context.Context, in *AddAnalysisReq, opts ...grpc.CallOption) (*AddAnalysisResp, error)
		UpdateAnalysis(ctx context.Context, in *UpdateAnalysisReq, opts ...grpc.CallOption) (*UpdateAnalysisResp, error)
		DelAnalysis(ctx context.Context, in *DelAnalysisReq, opts ...grpc.CallOption) (*DelAnalysisResp, error)
		GetAnalysis(ctx context.Context, in *GetAnalysisReq, opts ...grpc.CallOption) (*GetAnalysisResp, error)
	}

	defaultAnalysisZrpcClient struct {
		cli zrpc.Client
	}
)

func NewAnalysisZrpcClient(cli zrpc.Client) AnalysisZrpcClient {
	return &defaultAnalysisZrpcClient{
		cli: cli,
	}
}

// -----------------------analysis-----------------------
func (m *defaultAnalysisZrpcClient) AddAnalysis(ctx context.Context, in *AddAnalysisReq, opts ...grpc.CallOption) (*AddAnalysisResp, error) {
	client := pb.NewAnalysisClient(m.cli.Conn())
	return client.AddAnalysis(ctx, in, opts...)
}

func (m *defaultAnalysisZrpcClient) UpdateAnalysis(ctx context.Context, in *UpdateAnalysisReq, opts ...grpc.CallOption) (*UpdateAnalysisResp, error) {
	client := pb.NewAnalysisClient(m.cli.Conn())
	return client.UpdateAnalysis(ctx, in, opts...)
}

func (m *defaultAnalysisZrpcClient) DelAnalysis(ctx context.Context, in *DelAnalysisReq, opts ...grpc.CallOption) (*DelAnalysisResp, error) {
	client := pb.NewAnalysisClient(m.cli.Conn())
	return client.DelAnalysis(ctx, in, opts...)
}

func (m *defaultAnalysisZrpcClient) GetAnalysis(ctx context.Context, in *GetAnalysisReq, opts ...grpc.CallOption) (*GetAnalysisResp, error) {
	client := pb.NewAnalysisClient(m.cli.Conn())
	return client.GetAnalysis(ctx, in, opts...)
}
