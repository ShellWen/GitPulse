// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.4
// source: analysis.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------analysis--------------------------------
type Languages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId        int64  `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`               //dataId
	DataCreatedAt int64  `protobuf:"varint,2,opt,name=dataCreatedAt,proto3" json:"dataCreatedAt,omitempty"` //dataCreatedAt
	DataUpdatedAt int64  `protobuf:"varint,3,opt,name=dataUpdatedAt,proto3" json:"dataUpdatedAt,omitempty"` //dataUpdatedAt
	Languages     string `protobuf:"bytes,4,opt,name=languages,proto3" json:"languages,omitempty"`          //languages
}

func (x *Languages) Reset() {
	*x = Languages{}
	mi := &file_analysis_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Languages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Languages) ProtoMessage() {}

func (x *Languages) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Languages.ProtoReflect.Descriptor instead.
func (*Languages) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{0}
}

func (x *Languages) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Languages) GetDataCreatedAt() int64 {
	if x != nil {
		return x.DataCreatedAt
	}
	return 0
}

func (x *Languages) GetDataUpdatedAt() int64 {
	if x != nil {
		return x.DataUpdatedAt
	}
	return 0
}

func (x *Languages) GetLanguages() string {
	if x != nil {
		return x.Languages
	}
	return ""
}

type Region struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId        int64   `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`               //dataId
	DataCreatedAt int64   `protobuf:"varint,2,opt,name=dataCreatedAt,proto3" json:"dataCreatedAt,omitempty"` //dataCreatedAt
	DataUpdatedAt int64   `protobuf:"varint,3,opt,name=dataUpdatedAt,proto3" json:"dataUpdatedAt,omitempty"` //dataUpdatedAt
	Region        string  `protobuf:"bytes,4,opt,name=region,proto3" json:"region,omitempty"`                //region
	Confidence    float64 `protobuf:"fixed64,5,opt,name=confidence,proto3" json:"confidence,omitempty"`      //confidence
}

func (x *Region) Reset() {
	*x = Region{}
	mi := &file_analysis_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Region) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Region) ProtoMessage() {}

func (x *Region) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Region.ProtoReflect.Descriptor instead.
func (*Region) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{1}
}

func (x *Region) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Region) GetDataCreatedAt() int64 {
	if x != nil {
		return x.DataCreatedAt
	}
	return 0
}

func (x *Region) GetDataUpdatedAt() int64 {
	if x != nil {
		return x.DataUpdatedAt
	}
	return 0
}

func (x *Region) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Region) GetConfidence() float64 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type PulsePoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId        int64   `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`               //dataId
	DataCreatedAt int64   `protobuf:"varint,2,opt,name=dataCreatedAt,proto3" json:"dataCreatedAt,omitempty"` //dataCreatedAt
	DataUpdatedAt int64   `protobuf:"varint,3,opt,name=dataUpdatedAt,proto3" json:"dataUpdatedAt,omitempty"` //dataUpdatedAt
	PulsePoint    float64 `protobuf:"fixed64,4,opt,name=pulsePoint,proto3" json:"pulsePoint,omitempty"`      //pulsePoint
}

func (x *PulsePoint) Reset() {
	*x = PulsePoint{}
	mi := &file_analysis_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PulsePoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PulsePoint) ProtoMessage() {}

func (x *PulsePoint) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PulsePoint.ProtoReflect.Descriptor instead.
func (*PulsePoint) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{2}
}

func (x *PulsePoint) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *PulsePoint) GetDataCreatedAt() int64 {
	if x != nil {
		return x.DataCreatedAt
	}
	return 0
}

func (x *PulsePoint) GetDataUpdatedAt() int64 {
	if x != nil {
		return x.DataUpdatedAt
	}
	return 0
}

func (x *PulsePoint) GetPulsePoint() float64 {
	if x != nil {
		return x.PulsePoint
	}
	return 0
}

type Summary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId        int64  `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`               //dataId
	DataCreatedAt int64  `protobuf:"varint,2,opt,name=dataCreatedAt,proto3" json:"dataCreatedAt,omitempty"` //dataCreatedAt
	DataUpdatedAt int64  `protobuf:"varint,3,opt,name=dataUpdatedAt,proto3" json:"dataUpdatedAt,omitempty"` //dataUpdatedAt
	Summary       string `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`              //summary
}

func (x *Summary) Reset() {
	*x = Summary{}
	mi := &file_analysis_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Summary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Summary) ProtoMessage() {}

func (x *Summary) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Summary.ProtoReflect.Descriptor instead.
func (*Summary) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{3}
}

func (x *Summary) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Summary) GetDataCreatedAt() int64 {
	if x != nil {
		return x.DataCreatedAt
	}
	return 0
}

func (x *Summary) GetDataUpdatedAt() int64 {
	if x != nil {
		return x.DataUpdatedAt
	}
	return 0
}

func (x *Summary) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type DelAnalysisReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *DelAnalysisReq) Reset() {
	*x = DelAnalysisReq{}
	mi := &file_analysis_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAnalysisReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAnalysisReq) ProtoMessage() {}

func (x *DelAnalysisReq) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAnalysisReq.ProtoReflect.Descriptor instead.
func (*DelAnalysisReq) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{4}
}

func (x *DelAnalysisReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type DelAnalysisResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelAnalysisResp) Reset() {
	*x = DelAnalysisResp{}
	mi := &file_analysis_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelAnalysisResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelAnalysisResp) ProtoMessage() {}

func (x *DelAnalysisResp) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelAnalysisResp.ProtoReflect.Descriptor instead.
func (*DelAnalysisResp) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{5}
}

func (x *DelAnalysisResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelAnalysisResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetAnalysisReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *GetAnalysisReq) Reset() {
	*x = GetAnalysisReq{}
	mi := &file_analysis_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAnalysisReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnalysisReq) ProtoMessage() {}

func (x *GetAnalysisReq) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnalysisReq.ProtoReflect.Descriptor instead.
func (*GetAnalysisReq) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{6}
}

func (x *GetAnalysisReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type GetLanguagesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int64      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message   string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Languages *Languages `protobuf:"bytes,3,opt,name=languages,proto3" json:"languages,omitempty"` //languages
}

func (x *GetLanguagesResp) Reset() {
	*x = GetLanguagesResp{}
	mi := &file_analysis_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLanguagesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLanguagesResp) ProtoMessage() {}

func (x *GetLanguagesResp) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLanguagesResp.ProtoReflect.Descriptor instead.
func (*GetLanguagesResp) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{7}
}

func (x *GetLanguagesResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetLanguagesResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetLanguagesResp) GetLanguages() *Languages {
	if x != nil {
		return x.Languages
	}
	return nil
}

type GetRegionResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Region  *Region `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"` //region
}

func (x *GetRegionResp) Reset() {
	*x = GetRegionResp{}
	mi := &file_analysis_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRegionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRegionResp) ProtoMessage() {}

func (x *GetRegionResp) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRegionResp.ProtoReflect.Descriptor instead.
func (*GetRegionResp) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{8}
}

func (x *GetRegionResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetRegionResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetRegionResp) GetRegion() *Region {
	if x != nil {
		return x.Region
	}
	return nil
}

type GetPulsePointResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       int64       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message    string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	PulsePoint *PulsePoint `protobuf:"bytes,3,opt,name=pulsePoint,proto3" json:"pulsePoint,omitempty"` //pulsePoint
}

func (x *GetPulsePointResp) Reset() {
	*x = GetPulsePointResp{}
	mi := &file_analysis_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPulsePointResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPulsePointResp) ProtoMessage() {}

func (x *GetPulsePointResp) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPulsePointResp.ProtoReflect.Descriptor instead.
func (*GetPulsePointResp) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{9}
}

func (x *GetPulsePointResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPulsePointResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPulsePointResp) GetPulsePoint() *PulsePoint {
	if x != nil {
		return x.PulsePoint
	}
	return nil
}

type GetSummaryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Summary *Summary `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"` //summary
}

func (x *GetSummaryResp) Reset() {
	*x = GetSummaryResp{}
	mi := &file_analysis_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSummaryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSummaryResp) ProtoMessage() {}

func (x *GetSummaryResp) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSummaryResp.ProtoReflect.Descriptor instead.
func (*GetSummaryResp) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{10}
}

func (x *GetSummaryResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetSummaryResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetSummaryResp) GetSummary() *Summary {
	if x != nil {
		return x.Summary
	}
	return nil
}

type UpdateAnalysisReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *UpdateAnalysisReq) Reset() {
	*x = UpdateAnalysisReq{}
	mi := &file_analysis_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAnalysisReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnalysisReq) ProtoMessage() {}

func (x *UpdateAnalysisReq) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnalysisReq.ProtoReflect.Descriptor instead.
func (*UpdateAnalysisReq) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateAnalysisReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

type UpdateAnalysisResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateAnalysisResp) Reset() {
	*x = UpdateAnalysisResp{}
	mi := &file_analysis_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAnalysisResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAnalysisResp) ProtoMessage() {}

func (x *UpdateAnalysisResp) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAnalysisResp.ProtoReflect.Descriptor instead.
func (*UpdateAnalysisResp) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateAnalysisResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateAnalysisResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetPulsePointRankReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperId int64 `protobuf:"varint,1,opt,name=developerId,proto3" json:"developerId,omitempty"` //developerId
}

func (x *GetPulsePointRankReq) Reset() {
	*x = GetPulsePointRankReq{}
	mi := &file_analysis_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPulsePointRankReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPulsePointRankReq) ProtoMessage() {}

func (x *GetPulsePointRankReq) ProtoReflect() protoreflect.Message {
	mi := &file_analysis_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPulsePointRankReq.ProtoReflect.Descriptor instead.
func (*GetPulsePointRankReq) Descriptor() ([]byte, []int) {
	return file_analysis_proto_rawDescGZIP(), []int{13}
}

func (x *GetPulsePointRankReq) GetDeveloperId() int64 {
	if x != nil {
		return x.DeveloperId
	}
	return 0
}

var File_analysis_proto protoreflect.FileDescriptor

var file_analysis_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x22, 0x8d, 0x01, 0x0a, 0x09, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61,
	0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x0a,
	0x50, 0x75, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0a, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x87,
	0x01, 0x0a, 0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61,
	0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x61,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x32, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x41,
	0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x32, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x6d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73,
	0x22, 0x61, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x22, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x22, 0x71, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2e, 0x0a, 0x0a, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x75, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0a, 0x70, 0x75, 0x6c, 0x73,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x35, 0x0a,
	0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x42, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x38, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x49, 0x64, 0x32, 0xcc, 0x05, 0x0a, 0x08, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x12,
	0x36, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x09, 0x44, 0x65, 0x6c, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x61,
	0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x38, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x12,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x35, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x53, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3f,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c,
	0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3d, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12,
	0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79,
	0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41,
	0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x3e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e,
	0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x38, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x73, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73,
	0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x3a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69,
	0x73, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x6c,
	0x73, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x34, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x73, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_analysis_proto_rawDescOnce sync.Once
	file_analysis_proto_rawDescData = file_analysis_proto_rawDesc
)

func file_analysis_proto_rawDescGZIP() []byte {
	file_analysis_proto_rawDescOnce.Do(func() {
		file_analysis_proto_rawDescData = protoimpl.X.CompressGZIP(file_analysis_proto_rawDescData)
	})
	return file_analysis_proto_rawDescData
}

var file_analysis_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_analysis_proto_goTypes = []any{
	(*Languages)(nil),            // 0: pb.Languages
	(*Region)(nil),               // 1: pb.Region
	(*PulsePoint)(nil),           // 2: pb.PulsePoint
	(*Summary)(nil),              // 3: pb.Summary
	(*DelAnalysisReq)(nil),       // 4: pb.DelAnalysisReq
	(*DelAnalysisResp)(nil),      // 5: pb.DelAnalysisResp
	(*GetAnalysisReq)(nil),       // 6: pb.GetAnalysisReq
	(*GetLanguagesResp)(nil),     // 7: pb.GetLanguagesResp
	(*GetRegionResp)(nil),        // 8: pb.GetRegionResp
	(*GetPulsePointResp)(nil),    // 9: pb.GetPulsePointResp
	(*GetSummaryResp)(nil),       // 10: pb.GetSummaryResp
	(*UpdateAnalysisReq)(nil),    // 11: pb.UpdateAnalysisReq
	(*UpdateAnalysisResp)(nil),   // 12: pb.UpdateAnalysisResp
	(*GetPulsePointRankReq)(nil), // 13: pb.GetPulsePointRankReq
}
var file_analysis_proto_depIdxs = []int32{
	0,  // 0: pb.GetLanguagesResp.languages:type_name -> pb.Languages
	1,  // 1: pb.GetRegionResp.region:type_name -> pb.Region
	2,  // 2: pb.GetPulsePointResp.pulsePoint:type_name -> pb.PulsePoint
	3,  // 3: pb.GetSummaryResp.summary:type_name -> pb.Summary
	4,  // 4: pb.analysis.DelLanguage:input_type -> pb.DelAnalysisReq
	4,  // 5: pb.analysis.DelRegion:input_type -> pb.DelAnalysisReq
	4,  // 6: pb.analysis.DelPulsePoint:input_type -> pb.DelAnalysisReq
	4,  // 7: pb.analysis.DelSummary:input_type -> pb.DelAnalysisReq
	11, // 8: pb.analysis.UpdateLanguage:input_type -> pb.UpdateAnalysisReq
	11, // 9: pb.analysis.UpdateRegion:input_type -> pb.UpdateAnalysisReq
	11, // 10: pb.analysis.UpdatePulsePoint:input_type -> pb.UpdateAnalysisReq
	11, // 11: pb.analysis.UpdateSummary:input_type -> pb.UpdateAnalysisReq
	6,  // 12: pb.analysis.GetLanguages:input_type -> pb.GetAnalysisReq
	6,  // 13: pb.analysis.GetRegion:input_type -> pb.GetAnalysisReq
	6,  // 14: pb.analysis.GetPulsePoint:input_type -> pb.GetAnalysisReq
	6,  // 15: pb.analysis.GetSummary:input_type -> pb.GetAnalysisReq
	5,  // 16: pb.analysis.DelLanguage:output_type -> pb.DelAnalysisResp
	5,  // 17: pb.analysis.DelRegion:output_type -> pb.DelAnalysisResp
	5,  // 18: pb.analysis.DelPulsePoint:output_type -> pb.DelAnalysisResp
	5,  // 19: pb.analysis.DelSummary:output_type -> pb.DelAnalysisResp
	12, // 20: pb.analysis.UpdateLanguage:output_type -> pb.UpdateAnalysisResp
	12, // 21: pb.analysis.UpdateRegion:output_type -> pb.UpdateAnalysisResp
	12, // 22: pb.analysis.UpdatePulsePoint:output_type -> pb.UpdateAnalysisResp
	12, // 23: pb.analysis.UpdateSummary:output_type -> pb.UpdateAnalysisResp
	7,  // 24: pb.analysis.GetLanguages:output_type -> pb.GetLanguagesResp
	8,  // 25: pb.analysis.GetRegion:output_type -> pb.GetRegionResp
	9,  // 26: pb.analysis.GetPulsePoint:output_type -> pb.GetPulsePointResp
	10, // 27: pb.analysis.GetSummary:output_type -> pb.GetSummaryResp
	16, // [16:28] is the sub-list for method output_type
	4,  // [4:16] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_analysis_proto_init() }
func file_analysis_proto_init() {
	if File_analysis_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_analysis_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_analysis_proto_goTypes,
		DependencyIndexes: file_analysis_proto_depIdxs,
		MessageInfos:      file_analysis_proto_msgTypes,
	}.Build()
	File_analysis_proto = out.File
	file_analysis_proto_rawDesc = nil
	file_analysis_proto_goTypes = nil
	file_analysis_proto_depIdxs = nil
}
