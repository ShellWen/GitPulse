// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.4
// source: developer.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------developer--------------------------------
type Developer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DataId       int64  `protobuf:"varint,1,opt,name=dataId,proto3" json:"dataId,omitempty"`             //Generated primary key, MUST NOT be changed.
	DataCreateAt int64  `protobuf:"varint,2,opt,name=dataCreateAt,proto3" json:"dataCreateAt,omitempty"` //dataCreateAt
	DataUpdateAt int64  `protobuf:"varint,3,opt,name=dataUpdateAt,proto3" json:"dataUpdateAt,omitempty"` //dataUpdateAt
	Id           int64  `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`                     //Unique id of GitHub user.
	Name         string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`                  //name
	Username     string `protobuf:"bytes,6,opt,name=username,proto3" json:"username,omitempty"`          //username
	AvatarUrl    string `protobuf:"bytes,7,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`        //avatarUrl
	Company      string `protobuf:"bytes,8,opt,name=company,proto3" json:"company,omitempty"`            //company
	Location     string `protobuf:"bytes,9,opt,name=location,proto3" json:"location,omitempty"`          //location
	Bio          string `protobuf:"bytes,10,opt,name=bio,proto3" json:"bio,omitempty"`                   //bio
	Blog         string `protobuf:"bytes,11,opt,name=blog,proto3" json:"blog,omitempty"`                 //blog
	Email        string `protobuf:"bytes,12,opt,name=email,proto3" json:"email,omitempty"`               //email
	CreateAt     int64  `protobuf:"varint,13,opt,name=createAt,proto3" json:"createAt,omitempty"`        //createAt
	UpdateAt     int64  `protobuf:"varint,14,opt,name=updateAt,proto3" json:"updateAt,omitempty"`        //updateAt
}

func (x *Developer) Reset() {
	*x = Developer{}
	mi := &file_developer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Developer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Developer) ProtoMessage() {}

func (x *Developer) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Developer.ProtoReflect.Descriptor instead.
func (*Developer) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{0}
}

func (x *Developer) GetDataId() int64 {
	if x != nil {
		return x.DataId
	}
	return 0
}

func (x *Developer) GetDataCreateAt() int64 {
	if x != nil {
		return x.DataCreateAt
	}
	return 0
}

func (x *Developer) GetDataUpdateAt() int64 {
	if x != nil {
		return x.DataUpdateAt
	}
	return 0
}

func (x *Developer) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Developer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Developer) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Developer) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Developer) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *Developer) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *Developer) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *Developer) GetBlog() string {
	if x != nil {
		return x.Blog
	}
	return ""
}

func (x *Developer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Developer) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Developer) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

type AddDeveloperReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`              //Unique id of GitHub user.
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`           //name
	Username  string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`   //username
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"` //avatarUrl
	Company   string `protobuf:"bytes,5,opt,name=company,proto3" json:"company,omitempty"`     //company
	Location  string `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`   //location
	Bio       string `protobuf:"bytes,7,opt,name=bio,proto3" json:"bio,omitempty"`             //bio
	Blog      string `protobuf:"bytes,8,opt,name=blog,proto3" json:"blog,omitempty"`           //blog
	Email     string `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`         //email
	CreateAt  int64  `protobuf:"varint,10,opt,name=createAt,proto3" json:"createAt,omitempty"` //createAt
	UpdateAt  int64  `protobuf:"varint,11,opt,name=updateAt,proto3" json:"updateAt,omitempty"` //updateAt
}

func (x *AddDeveloperReq) Reset() {
	*x = AddDeveloperReq{}
	mi := &file_developer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDeveloperReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeveloperReq) ProtoMessage() {}

func (x *AddDeveloperReq) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeveloperReq.ProtoReflect.Descriptor instead.
func (*AddDeveloperReq) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{1}
}

func (x *AddDeveloperReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AddDeveloperReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddDeveloperReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *AddDeveloperReq) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *AddDeveloperReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *AddDeveloperReq) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *AddDeveloperReq) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *AddDeveloperReq) GetBlog() string {
	if x != nil {
		return x.Blog
	}
	return ""
}

func (x *AddDeveloperReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddDeveloperReq) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *AddDeveloperReq) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

type AddDeveloperResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *AddDeveloperResp) Reset() {
	*x = AddDeveloperResp{}
	mi := &file_developer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddDeveloperResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddDeveloperResp) ProtoMessage() {}

func (x *AddDeveloperResp) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddDeveloperResp.ProtoReflect.Descriptor instead.
func (*AddDeveloperResp) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{2}
}

func (x *AddDeveloperResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddDeveloperResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UpdateDeveloperReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`              //Unique id of GitHub user.
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`           //name
	Username  string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`   //username
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"` //avatarUrl
	Company   string `protobuf:"bytes,5,opt,name=company,proto3" json:"company,omitempty"`     //company
	Location  string `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`   //location
	Bio       string `protobuf:"bytes,7,opt,name=bio,proto3" json:"bio,omitempty"`             //bio
	Blog      string `protobuf:"bytes,8,opt,name=blog,proto3" json:"blog,omitempty"`           //blog
	Email     string `protobuf:"bytes,9,opt,name=email,proto3" json:"email,omitempty"`         //email
	CreateAt  int64  `protobuf:"varint,10,opt,name=createAt,proto3" json:"createAt,omitempty"` //createAt
	UpdateAt  int64  `protobuf:"varint,11,opt,name=updateAt,proto3" json:"updateAt,omitempty"` //updateAt
}

func (x *UpdateDeveloperReq) Reset() {
	*x = UpdateDeveloperReq{}
	mi := &file_developer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeveloperReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeveloperReq) ProtoMessage() {}

func (x *UpdateDeveloperReq) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeveloperReq.ProtoReflect.Descriptor instead.
func (*UpdateDeveloperReq) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateDeveloperReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateDeveloperReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDeveloperReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *UpdateDeveloperReq) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UpdateDeveloperReq) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *UpdateDeveloperReq) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *UpdateDeveloperReq) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *UpdateDeveloperReq) GetBlog() string {
	if x != nil {
		return x.Blog
	}
	return ""
}

func (x *UpdateDeveloperReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateDeveloperReq) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *UpdateDeveloperReq) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

type UpdateDeveloperResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *UpdateDeveloperResp) Reset() {
	*x = UpdateDeveloperResp{}
	mi := &file_developer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDeveloperResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeveloperResp) ProtoMessage() {}

func (x *UpdateDeveloperResp) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeveloperResp.ProtoReflect.Descriptor instead.
func (*UpdateDeveloperResp) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateDeveloperResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdateDeveloperResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DelDeveloperByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelDeveloperByIdReq) Reset() {
	*x = DelDeveloperByIdReq{}
	mi := &file_developer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelDeveloperByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDeveloperByIdReq) ProtoMessage() {}

func (x *DelDeveloperByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDeveloperByIdReq.ProtoReflect.Descriptor instead.
func (*DelDeveloperByIdReq) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{5}
}

func (x *DelDeveloperByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelDeveloperByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelDeveloperByIdResp) Reset() {
	*x = DelDeveloperByIdResp{}
	mi := &file_developer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelDeveloperByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDeveloperByIdResp) ProtoMessage() {}

func (x *DelDeveloperByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDeveloperByIdResp.ProtoReflect.Descriptor instead.
func (*DelDeveloperByIdResp) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{6}
}

func (x *DelDeveloperByIdResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelDeveloperByIdResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DelDeveloperByUsernameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` //username
}

func (x *DelDeveloperByUsernameReq) Reset() {
	*x = DelDeveloperByUsernameReq{}
	mi := &file_developer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelDeveloperByUsernameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDeveloperByUsernameReq) ProtoMessage() {}

func (x *DelDeveloperByUsernameReq) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDeveloperByUsernameReq.ProtoReflect.Descriptor instead.
func (*DelDeveloperByUsernameReq) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{7}
}

func (x *DelDeveloperByUsernameReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type DelDeveloperByUsernameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    int64  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DelDeveloperByUsernameResp) Reset() {
	*x = DelDeveloperByUsernameResp{}
	mi := &file_developer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelDeveloperByUsernameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelDeveloperByUsernameResp) ProtoMessage() {}

func (x *DelDeveloperByUsernameResp) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelDeveloperByUsernameResp.ProtoReflect.Descriptor instead.
func (*DelDeveloperByUsernameResp) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{8}
}

func (x *DelDeveloperByUsernameResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DelDeveloperByUsernameResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetDeveloperByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetDeveloperByIdReq) Reset() {
	*x = GetDeveloperByIdReq{}
	mi := &file_developer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeveloperByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeveloperByIdReq) ProtoMessage() {}

func (x *GetDeveloperByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeveloperByIdReq.ProtoReflect.Descriptor instead.
func (*GetDeveloperByIdReq) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{9}
}

func (x *GetDeveloperByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetDeveloperByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int64      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`          //ok
	Message   string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`     //exist
	Developer *Developer `protobuf:"bytes,3,opt,name=developer,proto3" json:"developer,omitempty"` //developer
}

func (x *GetDeveloperByIdResp) Reset() {
	*x = GetDeveloperByIdResp{}
	mi := &file_developer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeveloperByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeveloperByIdResp) ProtoMessage() {}

func (x *GetDeveloperByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeveloperByIdResp.ProtoReflect.Descriptor instead.
func (*GetDeveloperByIdResp) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{10}
}

func (x *GetDeveloperByIdResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDeveloperByIdResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDeveloperByIdResp) GetDeveloper() *Developer {
	if x != nil {
		return x.Developer
	}
	return nil
}

type GetDeveloperByUsernameReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` //username
}

func (x *GetDeveloperByUsernameReq) Reset() {
	*x = GetDeveloperByUsernameReq{}
	mi := &file_developer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeveloperByUsernameReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeveloperByUsernameReq) ProtoMessage() {}

func (x *GetDeveloperByUsernameReq) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeveloperByUsernameReq.ProtoReflect.Descriptor instead.
func (*GetDeveloperByUsernameReq) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{11}
}

func (x *GetDeveloperByUsernameReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GetDeveloperByUsernameResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int64      `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message   string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Developer *Developer `protobuf:"bytes,3,opt,name=developer,proto3" json:"developer,omitempty"` //developer
}

func (x *GetDeveloperByUsernameResp) Reset() {
	*x = GetDeveloperByUsernameResp{}
	mi := &file_developer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDeveloperByUsernameResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeveloperByUsernameResp) ProtoMessage() {}

func (x *GetDeveloperByUsernameResp) ProtoReflect() protoreflect.Message {
	mi := &file_developer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeveloperByUsernameResp.ProtoReflect.Descriptor instead.
func (*GetDeveloperByUsernameResp) Descriptor() ([]byte, []int) {
	return file_developer_proto_rawDescGZIP(), []int{12}
}

func (x *GetDeveloperByUsernameResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetDeveloperByUsernameResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetDeveloperByUsernameResp) GetDeveloper() *Developer {
	if x != nil {
		return x.Developer
	}
	return nil
}

var File_developer_proto protoreflect.FileDescriptor

var file_developer_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xf3, 0x02, 0x0a, 0x09, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x6f,
	0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x99, 0x02, 0x0a, 0x0f,
	0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x67, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x40, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x9c, 0x02, 0x0a, 0x12, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x67, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6c, 0x6f, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x74, 0x22, 0x43, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x25, 0x0a,
	0x13, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x37, 0x0a, 0x19, 0x44, 0x65,
	0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x4a, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f,
	0x70, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x25, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x71, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x09,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x22, 0x37, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x77, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x52, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x32, 0xca, 0x03, 0x0a, 0x09,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x0c, 0x41, 0x64, 0x64,
	0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x41,
	0x64, 0x64, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x14,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x42, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x17, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x65, 0x6c,
	0x6f, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x57, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x6c, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x12, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x57, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65,
	0x74, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_developer_proto_rawDescOnce sync.Once
	file_developer_proto_rawDescData = file_developer_proto_rawDesc
)

func file_developer_proto_rawDescGZIP() []byte {
	file_developer_proto_rawDescOnce.Do(func() {
		file_developer_proto_rawDescData = protoimpl.X.CompressGZIP(file_developer_proto_rawDescData)
	})
	return file_developer_proto_rawDescData
}

var file_developer_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_developer_proto_goTypes = []any{
	(*Developer)(nil),                  // 0: pb.Developer
	(*AddDeveloperReq)(nil),            // 1: pb.AddDeveloperReq
	(*AddDeveloperResp)(nil),           // 2: pb.AddDeveloperResp
	(*UpdateDeveloperReq)(nil),         // 3: pb.UpdateDeveloperReq
	(*UpdateDeveloperResp)(nil),        // 4: pb.UpdateDeveloperResp
	(*DelDeveloperByIdReq)(nil),        // 5: pb.DelDeveloperByIdReq
	(*DelDeveloperByIdResp)(nil),       // 6: pb.DelDeveloperByIdResp
	(*DelDeveloperByUsernameReq)(nil),  // 7: pb.DelDeveloperByUsernameReq
	(*DelDeveloperByUsernameResp)(nil), // 8: pb.DelDeveloperByUsernameResp
	(*GetDeveloperByIdReq)(nil),        // 9: pb.GetDeveloperByIdReq
	(*GetDeveloperByIdResp)(nil),       // 10: pb.GetDeveloperByIdResp
	(*GetDeveloperByUsernameReq)(nil),  // 11: pb.GetDeveloperByUsernameReq
	(*GetDeveloperByUsernameResp)(nil), // 12: pb.GetDeveloperByUsernameResp
}
var file_developer_proto_depIdxs = []int32{
	0,  // 0: pb.GetDeveloperByIdResp.developer:type_name -> pb.Developer
	0,  // 1: pb.GetDeveloperByUsernameResp.developer:type_name -> pb.Developer
	1,  // 2: pb.developer.AddDeveloper:input_type -> pb.AddDeveloperReq
	3,  // 3: pb.developer.UpdateDeveloper:input_type -> pb.UpdateDeveloperReq
	5,  // 4: pb.developer.DelDeveloperById:input_type -> pb.DelDeveloperByIdReq
	7,  // 5: pb.developer.DelDeveloperByUsername:input_type -> pb.DelDeveloperByUsernameReq
	9,  // 6: pb.developer.GetDeveloperById:input_type -> pb.GetDeveloperByIdReq
	11, // 7: pb.developer.GetDeveloperByUsername:input_type -> pb.GetDeveloperByUsernameReq
	2,  // 8: pb.developer.AddDeveloper:output_type -> pb.AddDeveloperResp
	4,  // 9: pb.developer.UpdateDeveloper:output_type -> pb.UpdateDeveloperResp
	6,  // 10: pb.developer.DelDeveloperById:output_type -> pb.DelDeveloperByIdResp
	8,  // 11: pb.developer.DelDeveloperByUsername:output_type -> pb.DelDeveloperByUsernameResp
	10, // 12: pb.developer.GetDeveloperById:output_type -> pb.GetDeveloperByIdResp
	12, // 13: pb.developer.GetDeveloperByUsername:output_type -> pb.GetDeveloperByUsernameResp
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_developer_proto_init() }
func file_developer_proto_init() {
	if File_developer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_developer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_developer_proto_goTypes,
		DependencyIndexes: file_developer_proto_depIdxs,
		MessageInfos:      file_developer_proto_msgTypes,
	}.Build()
	File_developer_proto = out.File
	file_developer_proto_rawDesc = nil
	file_developer_proto_goTypes = nil
	file_developer_proto_depIdxs = nil
}
