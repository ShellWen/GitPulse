// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package types

type Developer struct {
	Id        int64  `json:"id"`
	Name      string `json:"name"`
	Login     string `json:"login"`
	AvatarUrl string `json:"avatar_url"`
	Company   string `json:"company"`
	Location  string `json:"location"`
	Bio       string `json:"bio"`
	Blog      string `json:"blog"`
	Email     string `json:"email"`
	Followers int64  `json:"followers"`
	Following int64  `json:"following"`
	Stars     int64  `json:"stars"`
	Repos     int64  `json:"repos"`
	Gists     int64  `json:"gists"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
}

type GetDeveloperReq struct {
	Login string `path:"login"`
}

type GetLanguageUsageReq struct {
	Login  string `path:"login"`
	TaskId string `form:"task_id"`
}

type GetPulsePointReq struct {
	Login  string `path:"login"`
	TaskId string `form:"task_id"`
}

type GetRegionReq struct {
	Login  string `path:"login"`
	TaskId string `form:"task_id"`
}

type GetSummaryReq struct {
	Login  string `path:"login"`
	TaskId string `form:"task_id"`
}

type Language struct {
	Id    string `json:"id"`
	Name  string `json:"name"`
	Color string `json:"color"`
}

type LanguageUsage struct {
	Id        int64                    `json:"id"`
	Languages []LanguageWithPercentage `json:"languages"`
	UpdatedAt string                   `json:"updated_at"`
}

type LanguageWithPercentage struct {
	Language   Language `json:"language"`
	Percentage float64  `json:"percentage"`
}

type PostTaskReq struct {
	Login string `path:"login"`
}

type PulsePoint struct {
	Id         int64   `json:"id"`
	PulsePoint float64 `json:"pulse_point"`
	UpdatedAt  string  `json:"updated_at"`
}

type Region struct {
	Id         int64   `json:"id"`
	Region     string  `json:"region"`
	Confidence float64 `json:"confidence"`
}

type Summary struct {
	Id        int64  `json:"id"`
	Summary   string `json:"summary"`
	UpdatedAt string `json:"updated_at"`
}

type TaskId struct {
	TaskId string `json:"task_id"`
}

type TaskState struct {
	State  string `json:"state"`
	Reason string `json:"reason"`
}
