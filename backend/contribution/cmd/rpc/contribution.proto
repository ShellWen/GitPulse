syntax = "proto3";

option go_package ="./pb";

package pb;

// ------------------------------------ 
// Messages
// ------------------------------------ 

//--------------------------------contribution--------------------------------
message Contribution {
  int64 dataId = 1; //dataId
  int64 dataCreatedAt = 2; //dataCreatedAt
  int64 dataUpdatedAt = 3; //dataUpdatedAt
  int64 userId = 4; //userId
  int64 repoId = 5; //repoId
  string category = 6; //category
  string content = 7; //content
  int64 createdAt = 8; //createdAt
  int64 updatedAt = 9; //updatedAt
  int64 contributionId = 10; //contributionId
}

message AddContributionReq {
  int64 userId = 1; //userId
  int64 repoId = 2; //repoId
  string category = 3; //category
  string content = 4; //content
  int64 createdAt = 5; //createdAt
  int64 updatedAt = 6; //updatedAt
  int64 contributionId = 7; //contributionId
}

message AddContributionResp {
  int64 code = 1;
  string message = 2;
}

message UpdateContributionReq {
  int64 userId = 1; //userId
  int64 repoId = 2; //repoId
  string category = 3; //category
  string content = 4; //content
  int64 createdAt = 5; //createdAt
  int64 updatedAt = 6; //updatedAt
  int64 contributionId = 7; //contributionId
}

message UpdateContributionResp {
  int64 code = 1;
  string message = 2;
}

message DelContributionReq {
  int64 repoId = 1; //repoId
  string category = 2; //category
  int64 contributionId = 3; //contributionId
}

message DelContributionResp {
  int64 code = 1;
  string message = 2;
}

message DelAllContributionInCategoryByUserIdReq {
  string category = 1; //category
  int64 userId = 2; //userId
}

message DelAllContributionInCategoryByUserIdResp {
  int64 code = 1;
  string message = 2;
}

message GetContributionReq {
  int64 repoId = 1; //repoId
  string category = 2; //category
  int64 contributionId = 3; //contributionId
}

message GetContributionResp {
  int64 code = 1;
  string message = 2;
  Contribution contribution = 3; //contribution
}

message SearchByCategoryReq {
  int64 page = 1; //page
  int64 limit = 2; //limit
  string category = 3; //category
}

message SearchByCategoryResp {
  int64 code = 1;
  string message = 2;
  repeated Contribution contributions = 3; //contributions
}

message SearchByUserIdReq {
  int64 page = 1; //page
  int64 limit = 2; //limit
  int64 userId = 3; //userId
}

message SearchByUserIdResp {
  int64 code = 1;
  string message = 2;
  repeated Contribution contributions = 3; //contributions
}

message SearchByRepoIdReq {
  int64 page = 1; //page
  int64 limit = 2; //limit
  int64 repoId = 3; //repoId
}

message SearchByRepoIdResp {
  int64 code = 1;
  string message = 2;
  repeated Contribution contributions = 3; //contributions
}

message BlockUntilIssuePrOfUserUpdatedReq {
  int64 userId = 1; //userId
}

message BlockUntilIssuePrOfUserUpdatedResp {
  int64 code = 1;
  string message = 2;
}

message BlockUntilCommentReviewOfUserUpdatedReq {
  int64 userId = 1; //userId
}

message BlockUntilCommentReviewOfUserUpdatedResp {
  int64 code = 1;
  string message = 2;
}

message BlockUntilAllUpdatedReq {
  int64 userId = 1; //userId
}

message BlockUntilAllUpdatedResp {
  int64 code = 1;
  string message = 2;
}

// ------------------------------------ 
// Rpc Func
// ------------------------------------ 

service contribution{ 

	  //-----------------------contribution-----------------------
	  rpc AddContribution(AddContributionReq) returns (AddContributionResp);
	  rpc UpdateContribution(UpdateContributionReq) returns (UpdateContributionResp);
	  rpc DelContribution(DelContributionReq) returns (DelContributionResp);
    rpc DelAllContributionInCategoryByUserId(DelAllContributionInCategoryByUserIdReq) returns (DelAllContributionInCategoryByUserIdResp);
	  rpc GetContribution(GetContributionReq) returns (GetContributionResp);
    rpc SearchByCategory(SearchByCategoryReq) returns (SearchByCategoryResp);
    rpc SearchByUserId(SearchByUserIdReq) returns (SearchByUserIdResp);
    rpc SearchByRepoId(SearchByRepoIdReq) returns (SearchByRepoIdResp);
    rpc BlockUntilIssuePrOfUserUpdated(BlockUntilIssuePrOfUserUpdatedReq) returns (BlockUntilIssuePrOfUserUpdatedResp);
    rpc BlockUntilCommentReviewOfUserUpdated(BlockUntilCommentReviewOfUserUpdatedReq) returns (BlockUntilCommentReviewOfUserUpdatedResp);
    rpc BlockUntilAllUpdated(BlockUntilAllUpdatedReq) returns (BlockUntilAllUpdatedResp);
}
